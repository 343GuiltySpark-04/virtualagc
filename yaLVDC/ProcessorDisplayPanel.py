#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 14, 2020 05:50:22 PM CDT  platform: Linux

import sys

try:
  import Tkinter as tk
except ImportError:
  import tkinter as tk

try:
  import ttk
  py3 = False
except ImportError:
  import tkinter.ttk as ttk
  py3 = True

import ProcessorDisplayPanel_support

def vp_start_gui():
  '''Starting point when module is the main routine.'''
  global val, w, root
  root = tk.Tk()
  ProcessorDisplayPanel_support.set_Tk_var()
  top = topProcessorDisplayPanel (root)
  ProcessorDisplayPanel_support.init(root, top)
  root.mainloop()

w = None
def create_topProcessorDisplayPanel(rt, *args, **kwargs):
  '''Starting point when module is imported by another module.
     Correct form of call: 'create_topProcessorDisplayPanel(root, *args, **kwargs)' .'''
  global w, w_win, root
  #rt = root
  root = rt
  w = tk.Toplevel (root)
  ProcessorDisplayPanel_support.set_Tk_var()
  top = topProcessorDisplayPanel (w)
  ProcessorDisplayPanel_support.init(w, top, *args, **kwargs)
  return (w, top)

def destroy_topProcessorDisplayPanel():
  global w
  w.destroy()
  w = None

class topProcessorDisplayPanel:
  def __init__(self, top=None):
    '''This class configures and populates the toplevel window.
       top is the toplevel containing window.'''
    _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
    _fgcolor = '#000000'  # X11 color: 'black'
    _compcolor = '#d9d9d9' # X11 color: 'gray85'
    _ana1color = '#d9d9d9' # X11 color: 'gray85'
    _ana2color = '#ececec' # Closest X11 color: 'gray92'
    font39 = "-family {DejaVu Sans} -size 12"
    font42 = "-family {DejaVu Sans} -size 12"
    self.style = ttk.Style()
    if sys.platform == "win32":
      self.style.theme_use('winnative')
    self.style.configure('.',background=_bgcolor)
    self.style.configure('.',foreground=_fgcolor)
    self.style.configure('.',font=font39)
    self.style.map('.',background=
      [('selected', _compcolor), ('active',_ana2color)])

    top.geometry("1311x729+0+0")
    top.minsize(1, 1)
    top.maxsize(5105, 1170)
    top.resizable(1, 0)
    top.title("PROGRAMMABLE TEST CONTROLLER")
    top.configure(highlightcolor="black")

    self.paneProcessorDisplayPanel = ttk.Panedwindow(top, orient="vertical")
    self.paneProcessorDisplayPanel.place(relx=0.667, rely=0.0, relheight=1.0
        , relwidth=0.333)
    self.paneProcessorDisplayPanel.configure(takefocus="0")
    self.paneProcessorDisplayPanel_p5 = ttk.Labelframe(height=74.19999999999999
        , text='{}')
    self.paneProcessorDisplayPanel.add(self.paneProcessorDisplayPanel_p5, weight=0)
    self.paneProcessorDisplayPanel_p1 = ttk.Labelframe(height=100.0, text='DATA')

    self.paneProcessorDisplayPanel.add(self.paneProcessorDisplayPanel_p1, weight=1)
    self.paneProcessorDisplayPanel_p2 = ttk.Labelframe(height=100.0
        , text='INTERRUPTS')
    self.paneProcessorDisplayPanel.add(self.paneProcessorDisplayPanel_p2, weight=4)
    self.paneProcessorDisplayPanel_p3 = ttk.Labelframe(height=190.8
        , text='PROGRAM CONTROL')
    self.paneProcessorDisplayPanel.add(self.paneProcessorDisplayPanel_p3, weight=3)
    self.paneProcessorDisplayPanel_p4 = ttk.Labelframe(text='POWER CONTROL')
    self.paneProcessorDisplayPanel.add(self.paneProcessorDisplayPanel_p4, weight=2)
    self.__funcid0 = self.paneProcessorDisplayPanel.bind('<Map>', self.__adjust_sash0)

    self.Label9 = tk.Label(self.paneProcessorDisplayPanel_p5)
    self.Label9.place(relx=0.0, rely=0.143, height=25, width=437
        , bordermode='ignore')
    self.Label9.configure(activebackground="#f9f9f9")
    self.Label9.configure(font="-family {DejaVu Sans} -size 12")
    self.Label9.configure(text='''PROCESSOR DISPLAY PANEL''')

    self.PROG_ERR = tk.Canvas(self.paneProcessorDisplayPanel_p2)
    self.PROG_ERR.place(relx=0.801, rely=0.522, relheight=0.278, relwidth=0.073
        , bordermode='ignore')
    self.PROG_ERR.configure(background="black")
    self.PROG_ERR.configure(borderwidth="2")
    self.PROG_ERR.configure(relief="ridge")
    self.PROG_ERR.configure(selectbackground="#c4c4c4")
    self.PROG_ERR.configure(takefocus="0")

    self.TPanedwindow1 = ttk.Panedwindow(self.paneProcessorDisplayPanel_p3
        , orient="vertical")
    self.TPanedwindow1.place(relx=0.023, rely=0.092, relheight=0.862
        , relwidth=0.954, bordermode='ignore')
    self.TPanedwindow1.configure(takefocus="0")
    self.TPanedwindow1_p1 = ttk.Labelframe(height=128.0, text='')
    self.TPanedwindow1.add(self.TPanedwindow1_p1, weight=0)
    self.paneProgRegA = ttk.Labelframe(height=37.5, text='PROG REG A')
    self.TPanedwindow1.add(self.paneProgRegA, weight=0)
    self.paneProgRegB = ttk.Labelframe(text='PROG REG B')
    self.TPanedwindow1.add(self.paneProgRegB, weight=0)
    self.__funcid1 = self.TPanedwindow1.bind('<Map>', self.__adjust_sash1)

    self.P10 = tk.Canvas(self.TPanedwindow1_p1)
    self.P10.place(relx=0.427, rely=0.217, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.P10.configure(background="black")
    self.P10.configure(borderwidth="2")
    self.P10.configure(relief="ridge")
    self.P10.configure(selectbackground="#c4c4c4")
    self.P10.configure(takefocus="0")

    self.P4 = tk.Canvas(self.TPanedwindow1_p1)
    self.P4.place(relx=0.501, rely=0.217, relheight=0.35, relwidth=0.072
        , bordermode='ignore')
    self.P4.configure(background="black")
    self.P4.configure(borderwidth="2")
    self.P4.configure(relief="ridge")
    self.P4.configure(selectbackground="#c4c4c4")
    self.P4.configure(takefocus="0")

    self.D4 = tk.Canvas(self.TPanedwindow1_p1)
    self.D4.place(relx=0.427, rely=0.55, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.D4.configure(background="black")
    self.D4.configure(borderwidth="2")
    self.D4.configure(relief="ridge")
    self.D4.configure(selectbackground="#c4c4c4")
    self.D4.configure(takefocus="0")

    self.D3 = tk.Canvas(self.TPanedwindow1_p1)
    self.D3.place(relx=0.501, rely=0.55, relheight=0.35, relwidth=0.072
        , bordermode='ignore')
    self.D3.configure(background="black")
    self.D3.configure(borderwidth="2")
    self.D3.configure(relief="ridge")
    self.D3.configure(selectbackground="#c4c4c4")
    self.D3.configure(takefocus="0")

    self.P2 = tk.Canvas(self.TPanedwindow1_p1)
    self.P2.place(relx=0.573, rely=0.217, relheight=0.35, relwidth=0.072
        , bordermode='ignore')
    self.P2.configure(background="black")
    self.P2.configure(borderwidth="2")
    self.P2.configure(relief="ridge")
    self.P2.configure(selectbackground="#c4c4c4")
    self.P2.configure(takefocus="0")

    self.P1 = tk.Canvas(self.TPanedwindow1_p1)
    self.P1.place(relx=0.643, rely=0.217, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.P1.configure(background="black")
    self.P1.configure(borderwidth="2")
    self.P1.configure(relief="ridge")
    self.P1.configure(selectbackground="#c4c4c4")
    self.P1.configure(takefocus="0")

    self.D2 = tk.Canvas(self.TPanedwindow1_p1)
    self.D2.place(relx=0.571, rely=0.55, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.D2.configure(background="black")
    self.D2.configure(borderwidth="2")
    self.D2.configure(relief="ridge")
    self.D2.configure(selectbackground="#c4c4c4")
    self.D2.configure(takefocus="0")

    self.D1 = tk.Canvas(self.TPanedwindow1_p1)
    self.D1.place(relx=0.643, rely=0.55, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.D1.configure(background="black")
    self.D1.configure(borderwidth="2")
    self.D1.configure(relief="ridge")
    self.D1.configure(selectbackground="#c4c4c4")
    self.D1.configure(takefocus="0")

    self.P20 = tk.Canvas(self.TPanedwindow1_p1)
    self.P20.place(relx=0.357, rely=0.217, relheight=0.35, relwidth=0.072
        , bordermode='ignore')
    self.P20.configure(background="black")
    self.P20.configure(borderwidth="2")
    self.P20.configure(relief="ridge")
    self.P20.configure(selectbackground="#c4c4c4")
    self.P20.configure(takefocus="0")

    self.D5 = tk.Canvas(self.TPanedwindow1_p1)
    self.D5.place(relx=0.357, rely=0.55, relheight=0.35, relwidth=0.072
        , bordermode='ignore')
    self.D5.configure(background="black")
    self.D5.configure(borderwidth="2")
    self.D5.configure(relief="ridge")
    self.D5.configure(selectbackground="#c4c4c4")
    self.D5.configure(takefocus="0")

    self.P40 = tk.Canvas(self.TPanedwindow1_p1)
    self.P40.place(relx=0.285, rely=0.217, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.P40.configure(background="#000000")
    self.P40.configure(borderwidth="2")
    self.P40.configure(relief="ridge")
    self.P40.configure(selectbackground="#c4c4c4")
    self.P40.configure(takefocus="0")

    self.D6 = tk.Canvas(self.TPanedwindow1_p1)
    self.D6.place(relx=0.285, rely=0.55, relheight=0.35, relwidth=0.074
        , bordermode='ignore')
    self.D6.configure(background="black")
    self.D6.configure(borderwidth="2")
    self.D6.configure(relief="ridge")
    self.D6.configure(selectbackground="#c4c4c4")
    self.D6.configure(takefocus="0")

    self.PRA1 = tk.Checkbutton(self.paneProgRegA)
    self.PRA1.place(relx=0.096, rely=0.293, relheight=0.31, relwidth=0.084
        , bordermode='ignore')
    self.PRA1.configure(activebackground="#f9f9f9")
    self.PRA1.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA1.configure(justify='left')
    self.PRA1.configure(takefocus="0")
    self.PRA1.configure(variable=ProcessorDisplayPanel_support.bPRA1)

    self.PRA2 = tk.Checkbutton(self.paneProgRegA)
    self.PRA2.place(relx=0.168, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA2.configure(activebackground="#f9f9f9")
    self.PRA2.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA2.configure(justify='left')
    self.PRA2.configure(takefocus="0")
    self.PRA2.configure(variable=ProcessorDisplayPanel_support.bPRA2)

    self.PRA3 = tk.Checkbutton(self.paneProgRegA)
    self.PRA3.place(relx=0.237, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA3.configure(activebackground="#f9f9f9")
    self.PRA3.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA3.configure(justify='left')
    self.PRA3.configure(takefocus="0")
    self.PRA3.configure(variable=ProcessorDisplayPanel_support.bPRA3)

    self.PRA12 = tk.Checkbutton(self.paneProgRegA)
    self.PRA12.place(relx=0.88, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA12.configure(activebackground="#f9f9f9")
    self.PRA12.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA12.configure(justify='left')
    self.PRA12.configure(takefocus="0")
    self.PRA12.configure(variable=ProcessorDisplayPanel_support.bPRA12)

    self.PRA4 = tk.Checkbutton(self.paneProgRegA)
    self.PRA4.place(relx=0.309, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA4.configure(activebackground="#f9f9f9")
    self.PRA4.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA4.configure(justify='left')
    self.PRA4.configure(takefocus="0")
    self.PRA4.configure(variable=ProcessorDisplayPanel_support.bPRA4)

    self.PRA5 = tk.Checkbutton(self.paneProgRegA)
    self.PRA5.place(relx=0.381, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA5.configure(activebackground="#f9f9f9")
    self.PRA5.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA5.configure(justify='left')
    self.PRA5.configure(takefocus="0")
    self.PRA5.configure(variable=ProcessorDisplayPanel_support.bPRA5)

    self.PRA6 = tk.Checkbutton(self.paneProgRegA)
    self.PRA6.place(relx=0.451, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA6.configure(activebackground="#f9f9f9")
    self.PRA6.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA6.configure(justify='left')
    self.PRA6.configure(takefocus="0")
    self.PRA6.configure(variable=ProcessorDisplayPanel_support.bPRA6)

    self.PRA11 = tk.Checkbutton(self.paneProgRegA)
    self.PRA11.place(relx=0.811, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA11.configure(activebackground="#f9f9f9")
    self.PRA11.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA11.configure(justify='left')
    self.PRA11.configure(takefocus="0")
    self.PRA11.configure(variable=ProcessorDisplayPanel_support.bPRA11)

    self.PRA7 = tk.Checkbutton(self.paneProgRegA)
    self.PRA7.place(relx=0.525, rely=0.293, relheight=0.31, relwidth=0.084
        , bordermode='ignore')
    self.PRA7.configure(activebackground="#f9f9f9")
    self.PRA7.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA7.configure(justify='left')
    self.PRA7.configure(takefocus="0")
    self.PRA7.configure(variable=ProcessorDisplayPanel_support.bPRA7)

    self.PRA8 = tk.Checkbutton(self.paneProgRegA)
    self.PRA8.place(relx=0.595, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA8.configure(activebackground="#f9f9f9")
    self.PRA8.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA8.configure(justify='left')
    self.PRA8.configure(takefocus="0")
    self.PRA8.configure(variable=ProcessorDisplayPanel_support.bPRA8)

    self.PRA9 = tk.Checkbutton(self.paneProgRegA)
    self.PRA9.place(relx=0.667, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA9.configure(activebackground="#f9f9f9")
    self.PRA9.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA9.configure(justify='left')
    self.PRA9.configure(takefocus="0")
    self.PRA9.configure(variable=ProcessorDisplayPanel_support.bPRA9)

    self.PRA10 = tk.Checkbutton(self.paneProgRegA)
    self.PRA10.place(relx=0.739, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA10.configure(activebackground="#f9f9f9")
    self.PRA10.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA10.configure(justify='left')
    self.PRA10.configure(takefocus="0")
    self.PRA10.configure(variable=ProcessorDisplayPanel_support.bPRA10)

    self.PRA14 = tk.Checkbutton(self.paneProgRegA)
    self.PRA14.place(relx=0.096, rely=0.586, relheight=0.31, relwidth=0.084
        , bordermode='ignore')
    self.PRA14.configure(activebackground="#f9f9f9")
    self.PRA14.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA14.configure(justify='left')
    self.PRA14.configure(takefocus="0")
    self.PRA14.configure(variable=ProcessorDisplayPanel_support.bPRA14)

    self.PRA15 = tk.Checkbutton(self.paneProgRegA)
    self.PRA15.place(relx=0.168, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA15.configure(activebackground="#f9f9f9")
    self.PRA15.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA15.configure(justify='left')
    self.PRA15.configure(takefocus="0")
    self.PRA15.configure(variable=ProcessorDisplayPanel_support.bPRA15)

    self.PRA16 = tk.Checkbutton(self.paneProgRegA)
    self.PRA16.place(relx=0.237, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA16.configure(activebackground="#f9f9f9")
    self.PRA16.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA16.configure(justify='left')
    self.PRA16.configure(takefocus="0")
    self.PRA16.configure(variable=ProcessorDisplayPanel_support.bPRA16)

    self.PRA17 = tk.Checkbutton(self.paneProgRegA)
    self.PRA17.place(relx=0.309, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA17.configure(activebackground="#f9f9f9")
    self.PRA17.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA17.configure(justify='left')
    self.PRA17.configure(takefocus="0")
    self.PRA17.configure(variable=ProcessorDisplayPanel_support.bPRA17)

    self.PRA18 = tk.Checkbutton(self.paneProgRegA)
    self.PRA18.place(relx=0.381, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA18.configure(activebackground="#f9f9f9")
    self.PRA18.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA18.configure(justify='left')
    self.PRA18.configure(takefocus="0")
    self.PRA18.configure(variable=ProcessorDisplayPanel_support.bPRA18)

    self.PRA19 = tk.Checkbutton(self.paneProgRegA)
    self.PRA19.place(relx=0.451, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA19.configure(activebackground="#f9f9f9")
    self.PRA19.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA19.configure(justify='left')
    self.PRA19.configure(takefocus="0")
    self.PRA19.configure(variable=ProcessorDisplayPanel_support.bPRA19)

    self.PRA20 = tk.Checkbutton(self.paneProgRegA)
    self.PRA20.place(relx=0.525, rely=0.586, relheight=0.31, relwidth=0.084
        , bordermode='ignore')
    self.PRA20.configure(activebackground="#f9f9f9")
    self.PRA20.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA20.configure(justify='left')
    self.PRA20.configure(takefocus="0")
    self.PRA20.configure(variable=ProcessorDisplayPanel_support.bPRA20)

    self.PRA21 = tk.Checkbutton(self.paneProgRegA)
    self.PRA21.place(relx=0.595, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA21.configure(activebackground="#f9f9f9")
    self.PRA21.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA21.configure(justify='left')
    self.PRA21.configure(takefocus="0")
    self.PRA21.configure(variable=ProcessorDisplayPanel_support.bPRA21)

    self.PRA22 = tk.Checkbutton(self.paneProgRegA)
    self.PRA22.place(relx=0.667, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA22.configure(activebackground="#f9f9f9")
    self.PRA22.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA22.configure(justify='left')
    self.PRA22.configure(takefocus="0")
    self.PRA22.configure(variable=ProcessorDisplayPanel_support.bPRA22)

    self.PRA23 = tk.Checkbutton(self.paneProgRegA)
    self.PRA23.place(relx=0.739, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA23.configure(activebackground="#f9f9f9")
    self.PRA23.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA23.configure(justify='left')
    self.PRA23.configure(takefocus="0")
    self.PRA23.configure(variable=ProcessorDisplayPanel_support.bPRA23)

    self.PRA24 = tk.Checkbutton(self.paneProgRegA)
    self.PRA24.place(relx=0.811, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA24.configure(activebackground="#f9f9f9")
    self.PRA24.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA24.configure(justify='left')
    self.PRA24.configure(takefocus="0")
    self.PRA24.configure(variable=ProcessorDisplayPanel_support.bPRA24)

    self.PRA25 = tk.Checkbutton(self.paneProgRegA)
    self.PRA25.place(relx=0.88, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA25.configure(activebackground="#f9f9f9")
    self.PRA25.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA25.configure(justify='left')
    self.PRA25.configure(takefocus="0")
    self.PRA25.configure(variable=ProcessorDisplayPanel_support.bPRA25)

    self.PRAS = tk.Checkbutton(self.paneProgRegA)
    self.PRAS.place(relx=0.024, rely=0.293, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRAS.configure(activebackground="#f9f9f9")
    self.PRAS.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRAS.configure(justify='left')
    self.PRAS.configure(takefocus="0")
    self.PRAS.configure(variable=ProcessorDisplayPanel_support.bPRAS)

    self.PRA13 = tk.Checkbutton(self.paneProgRegA)
    self.PRA13.place(relx=0.024, rely=0.586, relheight=0.31, relwidth=0.086
        , bordermode='ignore')
    self.PRA13.configure(activebackground="#f9f9f9")
    self.PRA13.configure(command=ProcessorDisplayPanel_support.cPRA)
    self.PRA13.configure(justify='left')
    self.PRA13.configure(takefocus="0")
    self.PRA13.configure(variable=ProcessorDisplayPanel_support.bPRA13)

    self.Label1 = tk.Label(self.paneProgRegA)
    self.Label1.place(relx=0.022, rely=0.259, height=16, width=12
        , bordermode='ignore')
    self.Label1.configure(activebackground="#f9f9f9")
    self.Label1.configure(font="-family {DejaVu Sans} -size 7")
    self.Label1.configure(text='''S''')

    self.Label2 = tk.Label(self.paneProgRegA)
    self.Label2.place(relx=0.94, rely=0.259, height=16, width=20
        , bordermode='ignore')
    self.Label2.configure(activebackground="#f9f9f9")
    self.Label2.configure(font="-family {DejaVu Sans} -size 6")
    self.Label2.configure(text='''12''')

    self.Label3 = tk.Label(self.paneProgRegA)
    self.Label3.place(relx=0.94, rely=0.69, height=16, width=20
        , bordermode='ignore')
    self.Label3.configure(activebackground="#f9f9f9")
    self.Label3.configure(font="-family {DejaVu Sans} -size 6")
    self.Label3.configure(text='''25''')

    self.Label4 = tk.Label(self.paneProgRegA)
    self.Label4.place(relx=0.007, rely=0.69, height=16, width=20
        , bordermode='ignore')
    self.Label4.configure(activebackground="#f9f9f9")
    self.Label4.configure(font="-family {DejaVu Sans} -size 6")
    self.Label4.configure(text='''13''')

    self.PRBS = tk.Checkbutton(self.paneProgRegB)
    self.PRBS.place(relx=0.024, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRBS.configure(activebackground="#f9f9f9")
    self.PRBS.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRBS.configure(justify='left')
    self.PRBS.configure(takefocus="0")
    self.PRBS.configure(variable=ProcessorDisplayPanel_support.bPRBS)

    self.PRB13 = tk.Checkbutton(self.paneProgRegB)
    self.PRB13.place(relx=0.024, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB13.configure(activebackground="#f9f9f9")
    self.PRB13.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB13.configure(justify='left')
    self.PRB13.configure(takefocus="0")
    self.PRB13.configure(variable=ProcessorDisplayPanel_support.bPRB13)

    self.PRB1 = tk.Checkbutton(self.paneProgRegB)
    self.PRB1.place(relx=0.096, rely=0.288, relheight=0.322, relwidth=0.084
        , bordermode='ignore')
    self.PRB1.configure(activebackground="#f9f9f9")
    self.PRB1.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB1.configure(justify='left')
    self.PRB1.configure(takefocus="0")
    self.PRB1.configure(variable=ProcessorDisplayPanel_support.bPRB1)

    self.PRB2 = tk.Checkbutton(self.paneProgRegB)
    self.PRB2.place(relx=0.168, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB2.configure(activebackground="#f9f9f9")
    self.PRB2.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB2.configure(justify='left')
    self.PRB2.configure(takefocus="0")
    self.PRB2.configure(variable=ProcessorDisplayPanel_support.bPRB2)

    self.PRB3 = tk.Checkbutton(self.paneProgRegB)
    self.PRB3.place(relx=0.237, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB3.configure(activebackground="#f9f9f9")
    self.PRB3.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB3.configure(justify='left')
    self.PRB3.configure(takefocus="0")
    self.PRB3.configure(variable=ProcessorDisplayPanel_support.bPRB3)

    self.PRB4 = tk.Checkbutton(self.paneProgRegB)
    self.PRB4.place(relx=0.309, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB4.configure(activebackground="#f9f9f9")
    self.PRB4.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB4.configure(justify='left')
    self.PRB4.configure(takefocus="0")
    self.PRB4.configure(variable=ProcessorDisplayPanel_support.bPRB4)

    self.PRB5 = tk.Checkbutton(self.paneProgRegB)
    self.PRB5.place(relx=0.381, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB5.configure(activebackground="#f9f9f9")
    self.PRB5.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB5.configure(justify='left')
    self.PRB5.configure(takefocus="0")
    self.PRB5.configure(variable=ProcessorDisplayPanel_support.bPRB5)

    self.PRB6 = tk.Checkbutton(self.paneProgRegB)
    self.PRB6.place(relx=0.451, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB6.configure(activebackground="#f9f9f9")
    self.PRB6.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB6.configure(justify='left')
    self.PRB6.configure(takefocus="0")
    self.PRB6.configure(variable=ProcessorDisplayPanel_support.bPRB6)

    self.PRB7 = tk.Checkbutton(self.paneProgRegB)
    self.PRB7.place(relx=0.525, rely=0.288, relheight=0.322, relwidth=0.084
        , bordermode='ignore')
    self.PRB7.configure(activebackground="#f9f9f9")
    self.PRB7.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB7.configure(justify='left')
    self.PRB7.configure(takefocus="0")
    self.PRB7.configure(variable=ProcessorDisplayPanel_support.bPRB7)

    self.PRB8 = tk.Checkbutton(self.paneProgRegB)
    self.PRB8.place(relx=0.595, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB8.configure(activebackground="#f9f9f9")
    self.PRB8.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB8.configure(justify='left')
    self.PRB8.configure(takefocus="0")
    self.PRB8.configure(variable=ProcessorDisplayPanel_support.bPRB8)

    self.PRB9 = tk.Checkbutton(self.paneProgRegB)
    self.PRB9.place(relx=0.667, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB9.configure(activebackground="#f9f9f9")
    self.PRB9.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB9.configure(justify='left')
    self.PRB9.configure(takefocus="0")
    self.PRB9.configure(variable=ProcessorDisplayPanel_support.bPRB9)

    self.PRB10 = tk.Checkbutton(self.paneProgRegB)
    self.PRB10.place(relx=0.739, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB10.configure(activebackground="#f9f9f9")
    self.PRB10.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB10.configure(justify='left')
    self.PRB10.configure(takefocus="0")
    self.PRB10.configure(variable=ProcessorDisplayPanel_support.bPRB10)

    self.PRB11 = tk.Checkbutton(self.paneProgRegB)
    self.PRB11.place(relx=0.811, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB11.configure(activebackground="#f9f9f9")
    self.PRB11.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB11.configure(justify='left')
    self.PRB11.configure(takefocus="0")
    self.PRB11.configure(variable=ProcessorDisplayPanel_support.bPRB11)

    self.PRB12 = tk.Checkbutton(self.paneProgRegB)
    self.PRB12.place(relx=0.88, rely=0.288, relheight=0.322, relwidth=0.086
        , bordermode='ignore')
    self.PRB12.configure(activebackground="#f9f9f9")
    self.PRB12.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB12.configure(justify='left')
    self.PRB12.configure(takefocus="0")
    self.PRB12.configure(variable=ProcessorDisplayPanel_support.bPRB12)

    self.PRB14 = tk.Checkbutton(self.paneProgRegB)
    self.PRB14.place(relx=0.096, rely=0.593, relheight=0.305, relwidth=0.084
        , bordermode='ignore')
    self.PRB14.configure(activebackground="#f9f9f9")
    self.PRB14.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB14.configure(justify='left')
    self.PRB14.configure(takefocus="0")
    self.PRB14.configure(variable=ProcessorDisplayPanel_support.bPRB14)

    self.PRB15 = tk.Checkbutton(self.paneProgRegB)
    self.PRB15.place(relx=0.168, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB15.configure(activebackground="#f9f9f9")
    self.PRB15.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB15.configure(justify='left')
    self.PRB15.configure(takefocus="0")
    self.PRB15.configure(variable=ProcessorDisplayPanel_support.bPRB15)

    self.PRB16 = tk.Checkbutton(self.paneProgRegB)
    self.PRB16.place(relx=0.237, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB16.configure(activebackground="#f9f9f9")
    self.PRB16.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB16.configure(justify='left')
    self.PRB16.configure(takefocus="0")
    self.PRB16.configure(variable=ProcessorDisplayPanel_support.bPRB16)

    self.PRB17 = tk.Checkbutton(self.paneProgRegB)
    self.PRB17.place(relx=0.309, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB17.configure(activebackground="#f9f9f9")
    self.PRB17.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB17.configure(justify='left')
    self.PRB17.configure(takefocus="0")
    self.PRB17.configure(variable=ProcessorDisplayPanel_support.bPRB17)

    self.PRB18 = tk.Checkbutton(self.paneProgRegB)
    self.PRB18.place(relx=0.381, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB18.configure(activebackground="#f9f9f9")
    self.PRB18.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB18.configure(justify='left')
    self.PRB18.configure(takefocus="0")
    self.PRB18.configure(variable=ProcessorDisplayPanel_support.bPRB18)

    self.PRB19 = tk.Checkbutton(self.paneProgRegB)
    self.PRB19.place(relx=0.451, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB19.configure(activebackground="#f9f9f9")
    self.PRB19.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB19.configure(justify='left')
    self.PRB19.configure(takefocus="0")
    self.PRB19.configure(variable=ProcessorDisplayPanel_support.bPRB19)

    self.PRB20 = tk.Checkbutton(self.paneProgRegB)
    self.PRB20.place(relx=0.525, rely=0.593, relheight=0.305, relwidth=0.084
        , bordermode='ignore')
    self.PRB20.configure(activebackground="#f9f9f9")
    self.PRB20.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB20.configure(justify='left')
    self.PRB20.configure(takefocus="0")
    self.PRB20.configure(variable=ProcessorDisplayPanel_support.bPRB20)

    self.PRB21 = tk.Checkbutton(self.paneProgRegB)
    self.PRB21.place(relx=0.595, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB21.configure(activebackground="#f9f9f9")
    self.PRB21.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB21.configure(justify='left')
    self.PRB21.configure(takefocus="0")
    self.PRB21.configure(variable=ProcessorDisplayPanel_support.bPRB21)

    self.PRB22 = tk.Checkbutton(self.paneProgRegB)
    self.PRB22.place(relx=0.667, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB22.configure(activebackground="#f9f9f9")
    self.PRB22.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB22.configure(justify='left')
    self.PRB22.configure(takefocus="0")
    self.PRB22.configure(variable=ProcessorDisplayPanel_support.bPRB22)

    self.PRB23 = tk.Checkbutton(self.paneProgRegB)
    self.PRB23.place(relx=0.739, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB23.configure(activebackground="#f9f9f9")
    self.PRB23.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB23.configure(justify='left')
    self.PRB23.configure(takefocus="0")
    self.PRB23.configure(variable=ProcessorDisplayPanel_support.bPRB23)

    self.PRB24 = tk.Checkbutton(self.paneProgRegB)
    self.PRB24.place(relx=0.811, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB24.configure(activebackground="#f9f9f9")
    self.PRB24.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB24.configure(justify='left')
    self.PRB24.configure(takefocus="0")
    self.PRB24.configure(variable=ProcessorDisplayPanel_support.bPRB24)

    self.PRB25 = tk.Checkbutton(self.paneProgRegB)
    self.PRB25.place(relx=0.88, rely=0.593, relheight=0.305, relwidth=0.086
        , bordermode='ignore')
    self.PRB25.configure(activebackground="#f9f9f9")
    self.PRB25.configure(command=ProcessorDisplayPanel_support.cPRB)
    self.PRB25.configure(justify='left')
    self.PRB25.configure(takefocus="0")
    self.PRB25.configure(variable=ProcessorDisplayPanel_support.bPRB25)

    self.Label5 = tk.Label(self.paneProgRegB)
    self.Label5.place(relx=0.024, rely=0.22, height=17, width=12
        , bordermode='ignore')
    self.Label5.configure(activebackground="#f9f9f9")
    self.Label5.configure(font="-family {DejaVu Sans} -size 6")
    self.Label5.configure(text='''S''')

    self.Label6 = tk.Label(self.paneProgRegB)
    self.Label6.place(relx=0.94, rely=0.254, height=16, width=20
        , bordermode='ignore')
    self.Label6.configure(activebackground="#f9f9f9")
    self.Label6.configure(font="-family {DejaVu Sans} -size 6")
    self.Label6.configure(text='''12''')

    self.Label7 = tk.Label(self.paneProgRegB)
    self.Label7.place(relx=0.007, rely=0.695, height=16, width=20
        , bordermode='ignore')
    self.Label7.configure(activebackground="#f9f9f9")
    self.Label7.configure(font="-family {DejaVu Sans} -size 6")
    self.Label7.configure(text='''13''')

    self.Label8 = tk.Label(self.paneProgRegB)
    self.Label8.place(relx=0.94, rely=0.695, height=16, width=20
        , bordermode='ignore')
    self.Label8.configure(activebackground="#f9f9f9")
    self.Label8.configure(font="-family {DejaVu Sans} -size 6")
    self.Label8.configure(text='''25''')

    self.menubar = tk.Menu(top,font=font42,bg=_bgcolor,fg=_fgcolor)
    top.configure(menu = self.menubar)

    self.paneMemoryLoadAndDataDisplayPanel = ttk.Panedwindow(top
        , orient="vertical")
    self.paneMemoryLoadAndDataDisplayPanel.place(relx=0.331, rely=0.0
        , relheight=1.0, relwidth=0.333)
    self.paneMemoryLoadAndDataDisplayPanel.configure(takefocus="0")
    self.paneMemoryLoadAndDataDisplayPanel_p1 = ttk.Labelframe(height=350
        , text='{}')
    self.paneMemoryLoadAndDataDisplayPanel.add(self.paneMemoryLoadAndDataDisplayPanel_p1, weight=0)
    self.paneMemoryLoadAndDataDisplayPanel_p2 = ttk.Labelframe(height=118.5
        , text='INSTRUCTION ADDRESS')
    self.paneMemoryLoadAndDataDisplayPanel.add(self.paneMemoryLoadAndDataDisplayPanel_p2, weight=2)
    self.paneMemoryLoadAndDataDisplayPanel_p3 = ttk.Labelframe(height=118.5
        , text='DATA ADDRESS')
    self.paneMemoryLoadAndDataDisplayPanel.add(self.paneMemoryLoadAndDataDisplayPanel_p3, weight=2)
    self.paneMemoryLoadAndDataDisplayPanel_p4 = ttk.Labelframe(height=57.900000000000006
        , text='DATA')
    self.paneMemoryLoadAndDataDisplayPanel.add(self.paneMemoryLoadAndDataDisplayPanel_p4, weight=4)
    self.paneMemoryLoadAndDataDisplayPanel_p5 = ttk.Labelframe(height=33.900000000000006
        , text='{}')
    self.paneMemoryLoadAndDataDisplayPanel.add(self.paneMemoryLoadAndDataDisplayPanel_p5, weight=1)
    self.paneMemoryLoadAndDataDisplayPanel_p7 = ttk.Labelframe(text='DISPLAY MODE')

    self.paneMemoryLoadAndDataDisplayPanel.add(self.paneMemoryLoadAndDataDisplayPanel_p7, weight=3)
    self.__funcid2 = self.paneMemoryLoadAndDataDisplayPanel.bind('<Map>', self.__adjust_sash2)

    self.Label10 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p1)
    self.Label10.place(relx=0.0, rely=0.0, height=25, width=444
        , bordermode='ignore')
    self.Label10.configure(activebackground="#f9f9f9")
    self.Label10.configure(font="-family {DejaVu Sans} -size 12")
    self.Label10.configure(text='''MEMORY LOAD AND DATA DISPLAY''')

    self.iaComputerIS4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerIS4.place(relx=0.561, rely=0.222, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerIS4.configure(background="black")
    self.iaComputerIS4.configure(borderwidth="2")
    self.iaComputerIS4.configure(relief="ridge")
    self.iaComputerIS4.configure(selectbackground="#c4c4c4")
    self.iaComputerIS4.configure(takefocus="0")

    self.Label13_11 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label13_11.place(relx=0.664, rely=0.111, height=16, width=70
        , bordermode='ignore')
    self.Label13_11.configure(activebackground="#f9f9f9")
    self.Label13_11.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_11.configure(text='''SECTOR''')

    self.iaCommandIS4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandIS4.place(relx=0.561, rely=0.37, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandIS4.configure(background="black")
    self.iaCommandIS4.configure(borderwidth="2")
    self.iaCommandIS4.configure(relief="ridge")
    self.iaCommandIS4.configure(selectbackground="#c4c4c4")
    self.iaCommandIS4.configure(takefocus="0")

    self.Label13_13 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label13_13.place(relx=0.458, rely=0.556, height=16, width=70
        , bordermode='ignore')
    self.Label13_13.configure(activebackground="#f9f9f9")
    self.Label13_13.configure(anchor='ne')
    self.Label13_13.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_13.configure(text='''ADDRESS''')

    self.iaComputerA8 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA8.place(relx=0.195, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA8.configure(background="black")
    self.iaComputerA8.configure(borderwidth="2")
    self.iaComputerA8.configure(relief="ridge")
    self.iaComputerA8.configure(selectbackground="#c4c4c4")
    self.iaComputerA8.configure(takefocus="0")

    self.iaCommandA6 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA6.place(relx=0.378, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA6.configure(background="black")
    self.iaCommandA6.configure(borderwidth="2")
    self.iaCommandA6.configure(relief="ridge")
    self.iaCommandA6.configure(selectbackground="#c4c4c4")
    self.iaCommandA6.configure(takefocus="0")

    self.iaCommandA7 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA7.place(relx=0.286, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA7.configure(background="black")
    self.iaCommandA7.configure(borderwidth="2")
    self.iaCommandA7.configure(relief="ridge")
    self.iaCommandA7.configure(selectbackground="#c4c4c4")
    self.iaCommandA7.configure(takefocus="0")

    self.iaComputerIS3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerIS3.place(relx=0.652, rely=0.222, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerIS3.configure(background="black")
    self.iaComputerIS3.configure(borderwidth="2")
    self.iaComputerIS3.configure(relief="ridge")
    self.iaComputerIS3.configure(selectbackground="#c4c4c4")
    self.iaComputerIS3.configure(takefocus="0")

    self.iaCommandA8 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA8.place(relx=0.195, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA8.configure(background="black")
    self.iaCommandA8.configure(borderwidth="2")
    self.iaCommandA8.configure(relief="ridge")
    self.iaCommandA8.configure(selectbackground="#c4c4c4")
    self.iaCommandA8.configure(takefocus="0")

    self.iaCommandA5 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA5.place(relx=0.469, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA5.configure(background="black")
    self.iaCommandA5.configure(borderwidth="2")
    self.iaCommandA5.configure(relief="ridge")
    self.iaCommandA5.configure(selectbackground="#c4c4c4")
    self.iaCommandA5.configure(takefocus="0")

    self.iaCommandA4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA4.place(relx=0.561, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA4.configure(background="black")
    self.iaCommandA4.configure(borderwidth="2")
    self.iaCommandA4.configure(relief="ridge")
    self.iaCommandA4.configure(selectbackground="#c4c4c4")
    self.iaCommandA4.configure(takefocus="0")

    self.iaCommandA3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA3.place(relx=0.652, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA3.configure(background="black")
    self.iaCommandA3.configure(borderwidth="2")
    self.iaCommandA3.configure(relief="ridge")
    self.iaCommandA3.configure(selectbackground="#c4c4c4")
    self.iaCommandA3.configure(takefocus="0")

    self.iaCommandA2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA2.place(relx=0.744, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA2.configure(background="black")
    self.iaCommandA2.configure(borderwidth="2")
    self.iaCommandA2.configure(relief="ridge")
    self.iaCommandA2.configure(selectbackground="#c4c4c4")
    self.iaCommandA2.configure(takefocus="0")

    self.iaCommandA1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandA1.place(relx=0.835, rely=0.815, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandA1.configure(background="black")
    self.iaCommandA1.configure(borderwidth="2")
    self.iaCommandA1.configure(relief="ridge")
    self.iaCommandA1.configure(selectbackground="#c4c4c4")
    self.iaCommandA1.configure(takefocus="0")

    self.iaComputerA7 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA7.place(relx=0.286, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA7.configure(background="black")
    self.iaComputerA7.configure(borderwidth="2")
    self.iaComputerA7.configure(relief="ridge")
    self.iaComputerA7.configure(selectbackground="#c4c4c4")
    self.iaComputerA7.configure(takefocus="0")

    self.iaComputerA6 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA6.place(relx=0.378, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA6.configure(background="black")
    self.iaComputerA6.configure(borderwidth="2")
    self.iaComputerA6.configure(relief="ridge")
    self.iaComputerA6.configure(selectbackground="#c4c4c4")
    self.iaComputerA6.configure(takefocus="0")

    self.iaComputerA5 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA5.place(relx=0.469, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA5.configure(background="black")
    self.iaComputerA5.configure(borderwidth="2")
    self.iaComputerA5.configure(relief="ridge")
    self.iaComputerA5.configure(selectbackground="#c4c4c4")
    self.iaComputerA5.configure(takefocus="0")

    self.iaComputerA4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA4.place(relx=0.561, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA4.configure(background="black")
    self.iaComputerA4.configure(borderwidth="2")
    self.iaComputerA4.configure(relief="ridge")
    self.iaComputerA4.configure(selectbackground="#c4c4c4")
    self.iaComputerA4.configure(takefocus="0")

    self.iaComputerA3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA3.place(relx=0.652, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA3.configure(background="black")
    self.iaComputerA3.configure(borderwidth="2")
    self.iaComputerA3.configure(relief="ridge")
    self.iaComputerA3.configure(selectbackground="#c4c4c4")
    self.iaComputerA3.configure(takefocus="0")

    self.iaComputerA2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA2.place(relx=0.744, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA2.configure(background="black")
    self.iaComputerA2.configure(borderwidth="2")
    self.iaComputerA2.configure(relief="ridge")
    self.iaComputerA2.configure(selectbackground="#c4c4c4")
    self.iaComputerA2.configure(takefocus="0")

    self.iaComputerA1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerA1.place(relx=0.835, rely=0.667, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerA1.configure(background="black")
    self.iaComputerA1.configure(borderwidth="2")
    self.iaComputerA1.configure(relief="ridge")
    self.iaComputerA1.configure(selectbackground="#c4c4c4")
    self.iaComputerA1.configure(takefocus="0")

    self.Label12_4 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label12_4.place(relx=0.011, rely=0.667, height=23, width=77
        , bordermode='ignore')
    self.Label12_4.configure(activebackground="#f9f9f9")
    self.Label12_4.configure(anchor='ne')
    self.Label12_4.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_4.configure(text='''COMPUTER''')

    self.Label12_6 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label12_6.place(relx=0.011, rely=0.815, height=23, width=77
        , bordermode='ignore')
    self.Label12_6.configure(activebackground="#f9f9f9")
    self.Label12_6.configure(anchor='ne')
    self.Label12_6.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_6.configure(text='''COMMAND''')

    self.iaCommandIS3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandIS3.place(relx=0.652, rely=0.37, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandIS3.configure(background="black")
    self.iaCommandIS3.configure(borderwidth="2")
    self.iaCommandIS3.configure(relief="ridge")
    self.iaCommandIS3.configure(selectbackground="#c4c4c4")
    self.iaCommandIS3.configure(takefocus="0")

    self.iaComputerIS2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerIS2.place(relx=0.744, rely=0.222, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerIS2.configure(background="black")
    self.iaComputerIS2.configure(borderwidth="2")
    self.iaComputerIS2.configure(relief="ridge")
    self.iaComputerIS2.configure(selectbackground="#c4c4c4")
    self.iaComputerIS2.configure(takefocus="0")

    self.iaCommandIS2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandIS2.place(relx=0.744, rely=0.37, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandIS2.configure(background="black")
    self.iaCommandIS2.configure(borderwidth="2")
    self.iaCommandIS2.configure(relief="ridge")
    self.iaCommandIS2.configure(selectbackground="#c4c4c4")
    self.iaCommandIS2.configure(takefocus="0")

    self.iaComputerIS1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerIS1.place(relx=0.835, rely=0.222, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaComputerIS1.configure(background="black")
    self.iaComputerIS1.configure(borderwidth="2")
    self.iaComputerIS1.configure(relief="ridge")
    self.iaComputerIS1.configure(selectbackground="#c4c4c4")
    self.iaComputerIS1.configure(takefocus="0")

    self.iaCommandIS1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandIS1.place(relx=0.835, rely=0.37, relheight=0.156
        , relwidth=0.092, bordermode='ignore')
    self.iaCommandIS1.configure(background="black")
    self.iaCommandIS1.configure(borderwidth="2")
    self.iaCommandIS1.configure(relief="ridge")
    self.iaCommandIS1.configure(selectbackground="#c4c4c4")
    self.iaCommandIS1.configure(takefocus="0")

    self.iaComputerSYL1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerSYL1.place(relx=0.481, rely=0.222, relheight=0.156
        , relwidth=0.08, bordermode='ignore')
    self.iaComputerSYL1.configure(background="black")
    self.iaComputerSYL1.configure(borderwidth="2")
    self.iaComputerSYL1.configure(relief="ridge")
    self.iaComputerSYL1.configure(selectbackground="#c4c4c4")
    self.iaComputerSYL1.configure(takefocus="0")

    self.iaCommandSYL1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandSYL1.place(relx=0.481, rely=0.37, relheight=0.156
        , relwidth=0.08, bordermode='ignore')
    self.iaCommandSYL1.configure(background="black")
    self.iaCommandSYL1.configure(borderwidth="2")
    self.iaCommandSYL1.configure(relief="ridge")
    self.iaCommandSYL1.configure(selectbackground="#c4c4c4")
    self.iaCommandSYL1.configure(takefocus="0")

    self.iaComputerSYL0 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerSYL0.place(relx=0.4, rely=0.222, relheight=0.156
        , relwidth=0.08, bordermode='ignore')
    self.iaComputerSYL0.configure(background="black")
    self.iaComputerSYL0.configure(borderwidth="2")
    self.iaComputerSYL0.configure(relief="ridge")
    self.iaComputerSYL0.configure(selectbackground="#c4c4c4")
    self.iaComputerSYL0.configure(takefocus="0")

    self.iaCommandSYL0 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandSYL0.place(relx=0.4, rely=0.37, relheight=0.156, relwidth=0.08
        , bordermode='ignore')
    self.iaCommandSYL0.configure(background="black")
    self.iaCommandSYL0.configure(borderwidth="2")
    self.iaCommandSYL0.configure(relief="ridge")
    self.iaCommandSYL0.configure(selectbackground="#c4c4c4")
    self.iaCommandSYL0.configure(takefocus="0")

    self.mlREPEAT_13 = tk.Canvas(self.iaCommandSYL0)
    self.mlREPEAT_13.place(relx=7.8, rely=2.143, relheight=1.0, relwidth=1.0)
    self.mlREPEAT_13.configure(background="black")
    self.mlREPEAT_13.configure(borderwidth="2")
    self.mlREPEAT_13.configure(relief="ridge")
    self.mlREPEAT_13.configure(selectbackground="#c4c4c4")
    self.mlREPEAT_13.configure(takefocus="0")

    self.Label12_5 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label12_5.place(relx=0.217, rely=0.222, height=23, width=77
        , bordermode='ignore')
    self.Label12_5.configure(activebackground="#f9f9f9")
    self.Label12_5.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_5.configure(text='''COMPUTER''')

    self.Label12_7 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label12_7.place(relx=0.206, rely=0.37, height=23, width=82
        , bordermode='ignore')
    self.Label12_7.configure(activebackground="#f9f9f9")
    self.Label12_7.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_7.configure(text='''COMMAND''')

    self.iaCommandM0 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandM0.place(relx=0.046, rely=0.37, relheight=0.156, relwidth=0.08
        , bordermode='ignore')
    self.iaCommandM0.configure(background="black")
    self.iaCommandM0.configure(borderwidth="2")
    self.iaCommandM0.configure(relief="ridge")
    self.iaCommandM0.configure(selectbackground="#c4c4c4")
    self.iaCommandM0.configure(takefocus="0")

    self.mlREPEAT_8 = tk.Canvas(self.iaCommandM0)
    self.mlREPEAT_8.place(relx=7.8, rely=2.143, relheight=1.0, relwidth=1.0)
    self.mlREPEAT_8.configure(background="black")
    self.mlREPEAT_8.configure(borderwidth="2")
    self.mlREPEAT_8.configure(relief="ridge")
    self.mlREPEAT_8.configure(selectbackground="#c4c4c4")
    self.mlREPEAT_8.configure(takefocus="0")

    self.iaComputerM0 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerM0.place(relx=0.046, rely=0.222, relheight=0.156
        , relwidth=0.08, bordermode='ignore')
    self.iaComputerM0.configure(background="black")
    self.iaComputerM0.configure(borderwidth="2")
    self.iaComputerM0.configure(relief="ridge")
    self.iaComputerM0.configure(selectbackground="#c4c4c4")
    self.iaComputerM0.configure(takefocus="0")

    self.mlREPEAT_10 = tk.Canvas(self.iaComputerM0)
    self.mlREPEAT_10.place(relx=7.8, rely=2.143, relheight=1.0, relwidth=1.0)
    self.mlREPEAT_10.configure(background="black")
    self.mlREPEAT_10.configure(borderwidth="2")
    self.mlREPEAT_10.configure(relief="ridge")
    self.mlREPEAT_10.configure(selectbackground="#c4c4c4")
    self.mlREPEAT_10.configure(takefocus="0")

    self.iaCommandM1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaCommandM1.place(relx=0.126, rely=0.37, relheight=0.156, relwidth=0.08
        , bordermode='ignore')
    self.iaCommandM1.configure(background="black")
    self.iaCommandM1.configure(borderwidth="2")
    self.iaCommandM1.configure(relief="ridge")
    self.iaCommandM1.configure(selectbackground="#c4c4c4")
    self.iaCommandM1.configure(takefocus="0")

    self.mlREPEAT_12 = tk.Canvas(self.iaCommandM1)
    self.mlREPEAT_12.place(relx=7.8, rely=2.143, relheight=1.0, relwidth=1.0)
    self.mlREPEAT_12.configure(background="black")
    self.mlREPEAT_12.configure(borderwidth="2")
    self.mlREPEAT_12.configure(relief="ridge")
    self.mlREPEAT_12.configure(selectbackground="#c4c4c4")
    self.mlREPEAT_12.configure(takefocus="0")

    self.iaComputerM1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.iaComputerM1.place(relx=0.126, rely=0.222, relheight=0.156
        , relwidth=0.08, bordermode='ignore')
    self.iaComputerM1.configure(background="black")
    self.iaComputerM1.configure(borderwidth="2")
    self.iaComputerM1.configure(relief="ridge")
    self.iaComputerM1.configure(selectbackground="#c4c4c4")
    self.iaComputerM1.configure(takefocus="0")

    self.mlREPEAT_14 = tk.Canvas(self.iaComputerM1)
    self.mlREPEAT_14.place(relx=7.8, rely=2.143, relheight=1.0, relwidth=1.0)
    self.mlREPEAT_14.configure(background="black")
    self.mlREPEAT_14.configure(borderwidth="2")
    self.mlREPEAT_14.configure(relief="ridge")
    self.mlREPEAT_14.configure(selectbackground="#c4c4c4")
    self.mlREPEAT_14.configure(takefocus="0")

    self.Label13_8 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label13_8.place(relx=0.4, rely=0.111, height=16, width=70
        , bordermode='ignore')
    self.Label13_8.configure(activebackground="#f9f9f9")
    self.Label13_8.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_8.configure(text='''SYL''')

    self.Label13_12 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p2)
    self.Label13_12.place(relx=0.046, rely=0.111, height=16, width=70
        , bordermode='ignore')
    self.Label13_12.configure(activebackground="#f9f9f9")
    self.Label13_12.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_12.configure(text='''MODULE''')

    self.Label13_9 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label13_9.place(relx=0.343, rely=0.113, height=19, width=70
        , bordermode='ignore')
    self.Label13_9.configure(activebackground="#f9f9f9")
    self.Label13_9.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_9.configure(text='''SECTOR''')

    self.Label13_9 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label13_9.place(relx=0.789, rely=0.113, height=19, width=70
        , bordermode='ignore')
    self.Label13_9.configure(activebackground="#f9f9f9")
    self.Label13_9.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_9.configure(text='''MODULE''')

    self.daComputerDS4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerDS4.place(relx=0.24, rely=0.226, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daComputerDS4.configure(background="black")
    self.daComputerDS4.configure(borderwidth="2")
    self.daComputerDS4.configure(relief="ridge")
    self.daComputerDS4.configure(selectbackground="#c4c4c4")
    self.daComputerDS4.configure(takefocus="0")

    self.daPARITY_BIT = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daPARITY_BIT.place(relx=0.057, rely=0.226, relheight=0.308
        , relwidth=0.092, bordermode='ignore')
    self.daPARITY_BIT.configure(background="black")
    self.daPARITY_BIT.configure(borderwidth="2")
    self.daPARITY_BIT.configure(relief="ridge")
    self.daPARITY_BIT.configure(selectbackground="#c4c4c4")
    self.daPARITY_BIT.configure(takefocus="0")

    self.daCommandDS4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandDS4.place(relx=0.24, rely=0.376, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daCommandDS4.configure(background="black")
    self.daCommandDS4.configure(borderwidth="2")
    self.daCommandDS4.configure(relief="ridge")
    self.daCommandDS4.configure(selectbackground="#c4c4c4")
    self.daCommandDS4.configure(takefocus="0")

    self.daComputerDS3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerDS3.place(relx=0.332, rely=0.226, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daComputerDS3.configure(background="black")
    self.daComputerDS3.configure(borderwidth="2")
    self.daComputerDS3.configure(relief="ridge")
    self.daComputerDS3.configure(selectbackground="#c4c4c4")
    self.daComputerDS3.configure(takefocus="0")

    self.iaCommandIS4_11 = tk.Canvas(self.daComputerDS3)
    self.iaCommandIS4_11.place(relx=4.75, rely=0.81, relheight=1.0, relwidth=1.0)

    self.iaCommandIS4_11.configure(background="black")
    self.iaCommandIS4_11.configure(borderwidth="2")
    self.iaCommandIS4_11.configure(relief="ridge")
    self.iaCommandIS4_11.configure(selectbackground="#c4c4c4")
    self.iaCommandIS4_11.configure(takefocus="0")

    self.daCommandDS3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandDS3.place(relx=0.332, rely=0.376, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daCommandDS3.configure(background="black")
    self.daCommandDS3.configure(borderwidth="2")
    self.daCommandDS3.configure(relief="ridge")
    self.daCommandDS3.configure(selectbackground="#c4c4c4")
    self.daCommandDS3.configure(takefocus="0")

    self.daComputerDS2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerDS2.place(relx=0.423, rely=0.226, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daComputerDS2.configure(background="black")
    self.daComputerDS2.configure(borderwidth="2")
    self.daComputerDS2.configure(relief="ridge")
    self.daComputerDS2.configure(selectbackground="#c4c4c4")
    self.daComputerDS2.configure(takefocus="0")

    self.daCommandDS2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandDS2.place(relx=0.423, rely=0.376, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daCommandDS2.configure(background="black")
    self.daCommandDS2.configure(borderwidth="2")
    self.daCommandDS2.configure(relief="ridge")
    self.daCommandDS2.configure(selectbackground="#c4c4c4")
    self.daCommandDS2.configure(takefocus="0")

    self.iaCommandIS4_11 = tk.Canvas(self.daCommandDS2)
    self.iaCommandIS4_11.place(relx=5.65, rely=3.714, relheight=1.0
        , relwidth=1.0)
    self.iaCommandIS4_11.configure(background="black")
    self.iaCommandIS4_11.configure(borderwidth="2")
    self.iaCommandIS4_11.configure(relief="ridge")
    self.iaCommandIS4_11.configure(selectbackground="#c4c4c4")
    self.iaCommandIS4_11.configure(takefocus="0")

    self.daComputerDS1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerDS1.place(relx=0.515, rely=0.226, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daComputerDS1.configure(background="black")
    self.daComputerDS1.configure(borderwidth="2")
    self.daComputerDS1.configure(relief="ridge")
    self.daComputerDS1.configure(selectbackground="#c4c4c4")
    self.daComputerDS1.configure(takefocus="0")

    self.iaCommandIS4_11 = tk.Canvas(self.daComputerDS1)
    self.iaCommandIS4_11.place(relx=6.0, rely=1.667, relheight=1.0, relwidth=1.0)

    self.iaCommandIS4_11.configure(background="black")
    self.iaCommandIS4_11.configure(borderwidth="2")
    self.iaCommandIS4_11.configure(relief="ridge")
    self.iaCommandIS4_11.configure(selectbackground="#c4c4c4")
    self.iaCommandIS4_11.configure(takefocus="0")

    self.daCommandDS1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandDS1.place(relx=0.515, rely=0.376, relheight=0.158
        , relwidth=0.092, bordermode='ignore')
    self.daCommandDS1.configure(background="black")
    self.daCommandDS1.configure(borderwidth="2")
    self.daCommandDS1.configure(relief="ridge")
    self.daCommandDS1.configure(selectbackground="#c4c4c4")
    self.daCommandDS1.configure(takefocus="0")

    self.iaCommandIS4_11 = tk.Canvas(self.daCommandDS1)
    self.iaCommandIS4_11.place(relx=6.0, rely=3.333, relheight=1.0, relwidth=1.0)

    self.iaCommandIS4_11.configure(background="black")
    self.iaCommandIS4_11.configure(borderwidth="2")
    self.iaCommandIS4_11.configure(relief="ridge")
    self.iaCommandIS4_11.configure(selectbackground="#c4c4c4")
    self.iaCommandIS4_11.configure(takefocus="0")

    self.Label12_6 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label12_6.place(relx=0.606, rely=0.226, height=23, width=77
        , bordermode='ignore')
    self.Label12_6.configure(activebackground="#f9f9f9")
    self.Label12_6.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_6.configure(text='''COMPUTER''')

    self.Label12_8 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label12_8.place(relx=0.606, rely=0.376, height=23, width=77
        , bordermode='ignore')
    self.Label12_8.configure(activebackground="#f9f9f9")
    self.Label12_8.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_8.configure(text='''COMMAND''')

    self.daComputerM0 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerM0.place(relx=0.789, rely=0.226, relheight=0.158
        , relwidth=0.08, bordermode='ignore')
    self.daComputerM0.configure(background="black")
    self.daComputerM0.configure(borderwidth="2")
    self.daComputerM0.configure(relief="ridge")
    self.daComputerM0.configure(selectbackground="#c4c4c4")
    self.daComputerM0.configure(takefocus="0")

    self.daComputerM1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerM1.place(relx=0.87, rely=0.226, relheight=0.158, relwidth=0.08
        , bordermode='ignore')
    self.daComputerM1.configure(background="black")
    self.daComputerM1.configure(borderwidth="2")
    self.daComputerM1.configure(relief="ridge")
    self.daComputerM1.configure(selectbackground="#c4c4c4")
    self.daComputerM1.configure(takefocus="0")

    self.daCommandM0 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandM0.place(relx=0.789, rely=0.376, relheight=0.158, relwidth=0.08
        , bordermode='ignore')
    self.daCommandM0.configure(background="black")
    self.daCommandM0.configure(borderwidth="2")
    self.daCommandM0.configure(relief="ridge")
    self.daCommandM0.configure(selectbackground="#c4c4c4")
    self.daCommandM0.configure(takefocus="0")

    self.daCommandM1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandM1.place(relx=0.87, rely=0.376, relheight=0.158, relwidth=0.08
        , bordermode='ignore')
    self.daCommandM1.configure(background="black")
    self.daCommandM1.configure(borderwidth="2")
    self.daCommandM1.configure(relief="ridge")
    self.daCommandM1.configure(selectbackground="#c4c4c4")
    self.daCommandM1.configure(takefocus="0")

    self.Label13_10 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label13_10.place(relx=0.023, rely=0.15, height=9, width=70
        , bordermode='ignore')
    self.Label13_10.configure(activebackground="#f9f9f9")
    self.Label13_10.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_10.configure(text='''PARITY BIT''')

    self.daCommandOP3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOP3.place(relx=0.16, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOP3.configure(background="black")
    self.daCommandOP3.configure(borderwidth="2")
    self.daCommandOP3.configure(relief="ridge")
    self.daCommandOP3.configure(selectbackground="#c4c4c4")
    self.daCommandOP3.configure(takefocus="0")

    self.daCommandOP2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOP2.place(relx=0.229, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOP2.configure(background="black")
    self.daCommandOP2.configure(borderwidth="2")
    self.daCommandOP2.configure(relief="ridge")
    self.daCommandOP2.configure(selectbackground="#c4c4c4")
    self.daCommandOP2.configure(takefocus="0")

    self.daCommandOP1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOP1.place(relx=0.297, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOP1.configure(background="black")
    self.daCommandOP1.configure(borderwidth="2")
    self.daCommandOP1.configure(relief="ridge")
    self.daCommandOP1.configure(selectbackground="#c4c4c4")
    self.daCommandOP1.configure(takefocus="0")

    self.daCommandOA9 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA9.place(relx=0.366, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA9.configure(background="black")
    self.daCommandOA9.configure(borderwidth="2")
    self.daCommandOA9.configure(relief="ridge")
    self.daCommandOA9.configure(selectbackground="#c4c4c4")
    self.daCommandOA9.configure(takefocus="0")

    self.daCommandOA8 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA8.place(relx=0.435, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA8.configure(background="black")
    self.daCommandOA8.configure(borderwidth="2")
    self.daCommandOA8.configure(relief="ridge")
    self.daCommandOA8.configure(selectbackground="#c4c4c4")
    self.daCommandOA8.configure(takefocus="0")

    self.daCommandOA7 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA7.place(relx=0.503, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA7.configure(background="black")
    self.daCommandOA7.configure(borderwidth="2")
    self.daCommandOA7.configure(relief="ridge")
    self.daCommandOA7.configure(selectbackground="#c4c4c4")
    self.daCommandOA7.configure(takefocus="0")

    self.daCommandOA6 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA6.place(relx=0.572, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA6.configure(background="black")
    self.daCommandOA6.configure(borderwidth="2")
    self.daCommandOA6.configure(relief="ridge")
    self.daCommandOA6.configure(selectbackground="#c4c4c4")
    self.daCommandOA6.configure(takefocus="0")

    self.daCommandOA5 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA5.place(relx=0.641, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA5.configure(background="black")
    self.daCommandOA5.configure(borderwidth="2")
    self.daCommandOA5.configure(relief="ridge")
    self.daCommandOA5.configure(selectbackground="#c4c4c4")
    self.daCommandOA5.configure(takefocus="0")

    self.daCommandOA4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA4.place(relx=0.709, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA4.configure(background="black")
    self.daCommandOA4.configure(borderwidth="2")
    self.daCommandOA4.configure(relief="ridge")
    self.daCommandOA4.configure(selectbackground="#c4c4c4")
    self.daCommandOA4.configure(takefocus="0")

    self.daCommandOP4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOP4.place(relx=0.092, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOP4.configure(background="black")
    self.daCommandOP4.configure(borderwidth="2")
    self.daCommandOP4.configure(relief="ridge")
    self.daCommandOP4.configure(selectbackground="#c4c4c4")
    self.daCommandOP4.configure(takefocus="0")

    self.daCommandOA3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA3.place(relx=0.778, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA3.configure(background="black")
    self.daCommandOA3.configure(borderwidth="2")
    self.daCommandOA3.configure(relief="ridge")
    self.daCommandOA3.configure(selectbackground="#c4c4c4")
    self.daCommandOA3.configure(takefocus="0")

    self.daCommandOA2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA2.place(relx=0.847, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA2.configure(background="black")
    self.daCommandOA2.configure(borderwidth="2")
    self.daCommandOA2.configure(relief="ridge")
    self.daCommandOA2.configure(selectbackground="#c4c4c4")
    self.daCommandOA2.configure(takefocus="0")

    self.daCommandOA1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daCommandOA1.place(relx=0.915, rely=0.789, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daCommandOA1.configure(background="black")
    self.daCommandOA1.configure(borderwidth="2")
    self.daCommandOA1.configure(relief="ridge")
    self.daCommandOA1.configure(selectbackground="#c4c4c4")
    self.daCommandOA1.configure(takefocus="0")

    self.daComputerOP4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOP4.place(relx=0.092, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOP4.configure(background="black")
    self.daComputerOP4.configure(borderwidth="2")
    self.daComputerOP4.configure(relief="ridge")
    self.daComputerOP4.configure(selectbackground="#c4c4c4")
    self.daComputerOP4.configure(takefocus="0")

    self.daComputerOP3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOP3.place(relx=0.16, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOP3.configure(background="black")
    self.daComputerOP3.configure(borderwidth="2")
    self.daComputerOP3.configure(relief="ridge")
    self.daComputerOP3.configure(selectbackground="#c4c4c4")
    self.daComputerOP3.configure(takefocus="0")

    self.daComputerOP2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOP2.place(relx=0.229, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOP2.configure(background="black")
    self.daComputerOP2.configure(borderwidth="2")
    self.daComputerOP2.configure(relief="ridge")
    self.daComputerOP2.configure(selectbackground="#c4c4c4")
    self.daComputerOP2.configure(takefocus="0")

    self.daComputerOP1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOP1.place(relx=0.297, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOP1.configure(background="black")
    self.daComputerOP1.configure(borderwidth="2")
    self.daComputerOP1.configure(relief="ridge")
    self.daComputerOP1.configure(selectbackground="#c4c4c4")
    self.daComputerOP1.configure(takefocus="0")

    self.daComputerOA9 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA9.place(relx=0.366, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA9.configure(background="black")
    self.daComputerOA9.configure(borderwidth="2")
    self.daComputerOA9.configure(relief="ridge")
    self.daComputerOA9.configure(selectbackground="#c4c4c4")
    self.daComputerOA9.configure(takefocus="0")

    self.daComputerOA8 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA8.place(relx=0.435, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA8.configure(background="black")
    self.daComputerOA8.configure(borderwidth="2")
    self.daComputerOA8.configure(relief="ridge")
    self.daComputerOA8.configure(selectbackground="#c4c4c4")
    self.daComputerOA8.configure(takefocus="0")

    self.daComputerOA7 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA7.place(relx=0.503, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA7.configure(background="black")
    self.daComputerOA7.configure(borderwidth="2")
    self.daComputerOA7.configure(relief="ridge")
    self.daComputerOA7.configure(selectbackground="#c4c4c4")
    self.daComputerOA7.configure(takefocus="0")

    self.daComputerOA6 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA6.place(relx=0.572, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA6.configure(background="black")
    self.daComputerOA6.configure(borderwidth="2")
    self.daComputerOA6.configure(relief="ridge")
    self.daComputerOA6.configure(selectbackground="#c4c4c4")
    self.daComputerOA6.configure(takefocus="0")

    self.daComputerOA5 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA5.place(relx=0.641, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA5.configure(background="black")
    self.daComputerOA5.configure(borderwidth="2")
    self.daComputerOA5.configure(relief="ridge")
    self.daComputerOA5.configure(selectbackground="#c4c4c4")
    self.daComputerOA5.configure(takefocus="0")

    self.daComputerOA4 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA4.place(relx=0.709, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA4.configure(background="black")
    self.daComputerOA4.configure(borderwidth="2")
    self.daComputerOA4.configure(relief="ridge")
    self.daComputerOA4.configure(selectbackground="#c4c4c4")
    self.daComputerOA4.configure(takefocus="0")

    self.daComputerOA3 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA3.place(relx=0.778, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA3.configure(background="black")
    self.daComputerOA3.configure(borderwidth="2")
    self.daComputerOA3.configure(relief="ridge")
    self.daComputerOA3.configure(selectbackground="#c4c4c4")
    self.daComputerOA3.configure(takefocus="0")

    self.daComputerOA2 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA2.place(relx=0.847, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA2.configure(background="black")
    self.daComputerOA2.configure(borderwidth="2")
    self.daComputerOA2.configure(relief="ridge")
    self.daComputerOA2.configure(selectbackground="#c4c4c4")
    self.daComputerOA2.configure(takefocus="0")

    self.daComputerOA1 = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.daComputerOA1.place(relx=0.915, rely=0.639, relheight=0.158
        , relwidth=0.069, bordermode='ignore')
    self.daComputerOA1.configure(background="black")
    self.daComputerOA1.configure(borderwidth="2")
    self.daComputerOA1.configure(relief="ridge")
    self.daComputerOA1.configure(selectbackground="#c4c4c4")
    self.daComputerOA1.configure(takefocus="0")

    self.Label13_11 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label13_11.place(relx=0.16, rely=0.564, height=9, width=70
        , bordermode='ignore')
    self.Label13_11.configure(activebackground="#f9f9f9")
    self.Label13_11.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_11.configure(text='''OP CODE''')

    self.Label13_12 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label13_12.place(relx=0.595, rely=0.564, height=9, width=70
        , bordermode='ignore')
    self.Label13_12.configure(activebackground="#f9f9f9")
    self.Label13_12.configure(font="-family {DejaVu Sans} -size 8")
    self.Label13_12.configure(text='''OPERAND''')

    self.Label12_5 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label12_5.place(relx=0.011, rely=0.639, height=23, width=32
        , bordermode='ignore')
    self.Label12_5.configure(activebackground="#f9f9f9")
    self.Label12_5.configure(anchor='ne')
    self.Label12_5.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_5.configure(text='''CPTR''')

    self.Label12_6 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p3)
    self.Label12_6.place(relx=0.011, rely=0.789, height=23, width=32
        , bordermode='ignore')
    self.Label12_6.configure(activebackground="#f9f9f9")
    self.Label12_6.configure(anchor='ne')
    self.Label12_6.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_6.configure(text='''CMD''')

    self.TPanedwindow2 = ttk.Panedwindow(self.paneMemoryLoadAndDataDisplayPanel_p5
        , orient="horizontal")
    self.TPanedwindow2.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=1.0
        , bordermode='ignore')
    self.TPanedwindow2.configure(takefocus="0")
    self.TPanedwindow2_p1 = ttk.Labelframe(width=75, text='ERRORS')
    self.TPanedwindow2.add(self.TPanedwindow2_p1, weight=4)
    self.TPanedwindow2_p2 = ttk.Labelframe(text='MEMORY LOADER')
    self.TPanedwindow2.add(self.TPanedwindow2_p2, weight=2)
    self.__funcid3 = self.TPanedwindow2.bind('<Map>', self.__adjust_sash3)

    self.ERROR_RESET = tk.Canvas(self.TPanedwindow2_p1)
    self.ERROR_RESET.place(relx=0.606, rely=0.299, relheight=0.612
        , relwidth=0.173, bordermode='ignore')
    self.ERROR_RESET.configure(background="black")
    self.ERROR_RESET.configure(borderwidth="2")
    self.ERROR_RESET.configure(relief="ridge")
    self.ERROR_RESET.configure(selectbackground="#c4c4c4")
    self.ERROR_RESET.configure(takefocus="0")

    self.mlREPEAT = tk.Canvas(self.TPanedwindow2_p2)
    self.mlREPEAT.place(relx=0.05, rely=0.299, relheight=0.313, relwidth=0.199
        , bordermode='ignore')
    self.mlREPEAT.configure(background="black")
    self.mlREPEAT.configure(borderwidth="2")
    self.mlREPEAT.configure(relief="ridge")
    self.mlREPEAT.configure(selectbackground="#c4c4c4")
    self.mlREPEAT.configure(takefocus="0")

    self.mlREPEAT_INVERSE = tk.Canvas(self.TPanedwindow2_p2)
    self.mlREPEAT_INVERSE.place(relx=0.05, rely=0.597, relheight=0.313
        , relwidth=0.199, bordermode='ignore')
    self.mlREPEAT_INVERSE.configure(background="black")
    self.mlREPEAT_INVERSE.configure(borderwidth="2")
    self.mlREPEAT_INVERSE.configure(relief="ridge")
    self.mlREPEAT_INVERSE.configure(selectbackground="#c4c4c4")
    self.mlREPEAT_INVERSE.configure(takefocus="0")

    self.mlADDRESS_CMPTR = tk.Canvas(self.TPanedwindow2_p2)
    self.mlADDRESS_CMPTR.place(relx=0.249, rely=0.299, relheight=0.612
        , relwidth=0.249, bordermode='ignore')
    self.mlADDRESS_CMPTR.configure(background="black")
    self.mlADDRESS_CMPTR.configure(borderwidth="2")
    self.mlADDRESS_CMPTR.configure(relief="ridge")
    self.mlADDRESS_CMPTR.configure(selectbackground="#c4c4c4")
    self.mlADDRESS_CMPTR.configure(takefocus="0")

    self.mlCOMPTR_DISPLAY_RESET = tk.Canvas(self.TPanedwindow2_p2)
    self.mlCOMPTR_DISPLAY_RESET.place(relx=0.498, rely=0.299, relheight=0.612
        , relwidth=0.249, bordermode='ignore')
    self.mlCOMPTR_DISPLAY_RESET.configure(background="black")
    self.mlCOMPTR_DISPLAY_RESET.configure(borderwidth="2")
    self.mlCOMPTR_DISPLAY_RESET.configure(relief="ridge")
    self.mlCOMPTR_DISPLAY_RESET.configure(selectbackground="#c4c4c4")
    self.mlCOMPTR_DISPLAY_RESET.configure(takefocus="0")

    self.mlCOMMAND_DISPLAY_RESET = tk.Canvas(self.TPanedwindow2_p2)
    self.mlCOMMAND_DISPLAY_RESET.place(relx=0.746, rely=0.299, relheight=0.612
        , relwidth=0.249, bordermode='ignore')
    self.mlCOMMAND_DISPLAY_RESET.configure(background="black")
    self.mlCOMMAND_DISPLAY_RESET.configure(borderwidth="2")
    self.mlCOMMAND_DISPLAY_RESET.configure(relief="ridge")
    self.mlCOMMAND_DISPLAY_RESET.configure(selectbackground="#c4c4c4")
    self.mlCOMMAND_DISPLAY_RESET.configure(takefocus="0")

    self.TPanedwindow4 = ttk.Panedwindow(self.paneMemoryLoadAndDataDisplayPanel_p7
        , orient="horizontal")
    self.TPanedwindow4.place(relx=0.0, rely=0.0, relheight=0.006, relwidth=0.002
        , bordermode='ignore')
    self.TPanedwindow4.configure(takefocus="0")
    self.__funcid4 = self.TPanedwindow4.bind('<Map>', self.__adjust_sash4)

    self.frameDisplaySelect = tk.LabelFrame(self.paneMemoryLoadAndDataDisplayPanel_p7)
    self.frameDisplaySelect.place(relx=0.023, rely=0.111, relheight=0.861
        , relwidth=0.343, bordermode='ignore')
    self.frameDisplaySelect.configure(relief='groove')
    self.frameDisplaySelect.configure(font="-family {DejaVu Sans} -size -12")
    self.frameDisplaySelect.configure(text='''DISPLAY SELECT''')

    self.dsTRS = tk.Radiobutton(self.frameDisplaySelect)
    self.dsTRS.place(relx=0.267, rely=0.194, relheight=0.161, relwidth=0.347
        , bordermode='ignore')
    self.dsTRS.configure(activebackground="#f9f9f9")
    self.dsTRS.configure(anchor='nw')
    self.dsTRS.configure(font="-family {DejaVu Sans} -size -12")
    self.dsTRS.configure(justify='left')
    self.dsTRS.configure(takefocus="0")
    self.dsTRS.configure(text='''TRS''')
    self.dsTRS.configure(value="3")
    self.dsTRS.configure(variable=ProcessorDisplayPanel_support.displaySelect)

    self.dsDATA = tk.Radiobutton(self.frameDisplaySelect)
    self.dsDATA.place(relx=0.267, rely=0.387, relheight=0.161, relwidth=0.48
        , bordermode='ignore')
    self.dsDATA.configure(activebackground="#f9f9f9")
    self.dsDATA.configure(anchor='nw')
    self.dsDATA.configure(font="-family {DejaVu Sans} -size -12")
    self.dsDATA.configure(justify='left')
    self.dsDATA.configure(takefocus="0")
    self.dsDATA.configure(text='''DATA''')
    self.dsDATA.configure(value="2")
    self.dsDATA.configure(variable=ProcessorDisplayPanel_support.displaySelect)

    self.dsIA = tk.Radiobutton(self.frameDisplaySelect)
    self.dsIA.place(relx=0.267, rely=0.516, relheight=0.161, relwidth=0.347
        , bordermode='ignore')
    self.dsIA.configure(activebackground="#f9f9f9")
    self.dsIA.configure(anchor='nw')
    self.dsIA.configure(font="-family {DejaVu Sans} -size -12")
    self.dsIA.configure(justify='left')
    self.dsIA.configure(takefocus="0")
    self.dsIA.configure(text='''IA''')
    self.dsIA.configure(value="1")
    self.dsIA.configure(variable=ProcessorDisplayPanel_support.displaySelect)

    self.dsNONE = tk.Radiobutton(self.frameDisplaySelect)
    self.dsNONE.place(relx=0.267, rely=0.71, relheight=0.161, relwidth=0.413
        , bordermode='ignore')
    self.dsNONE.configure(activebackground="#f9f9f9")
    self.dsNONE.configure(anchor='nw')
    self.dsNONE.configure(font="-family {DejaVu Sans} -size -12")
    self.dsNONE.configure(justify='left')
    self.dsNONE.configure(takefocus="0")
    self.dsNONE.configure(text='''NONE''')
    self.dsNONE.configure(value="0")
    self.dsNONE.configure(variable=ProcessorDisplayPanel_support.displaySelect)

    self.Label18 = tk.Label(self.frameDisplaySelect)
    self.Label18.place(relx=0.133, rely=0.452, height=23, width=28
        , bordermode='ignore')
    self.Label18.configure(activebackground="#f9f9f9")
    self.Label18.configure(anchor='ne')
    self.Label18.configure(font="-family {DejaVu Sans} -size -12")
    self.Label18.configure(text='''A13''')

    self.frameModeControl = tk.LabelFrame(self.paneMemoryLoadAndDataDisplayPanel_p7)
    self.frameModeControl.place(relx=0.549, rely=0.111, relheight=0.861
        , relwidth=0.435, bordermode='ignore')
    self.frameModeControl.configure(relief='groove')
    self.frameModeControl.configure(font="-family {DejaVu Sans} -size -12")
    self.frameModeControl.configure(text='''MODE CONTROL''')

    self.mcdREPEAT = tk.Radiobutton(self.frameModeControl)
    self.mcdREPEAT.place(relx=0.316, rely=0.194, relheight=0.161, relwidth=0.484
        , bordermode='ignore')
    self.mcdREPEAT.configure(activebackground="#f9f9f9")
    self.mcdREPEAT.configure(anchor='nw')
    self.mcdREPEAT.configure(font="-family {DejaVu Sans} -size -12")
    self.mcdREPEAT.configure(justify='left')
    self.mcdREPEAT.configure(takefocus="0")
    self.mcdREPEAT.configure(text='''REPEAT''')
    self.mcdREPEAT.configure(value="4")
    self.mcdREPEAT.configure(variable=ProcessorDisplayPanel_support.modeControl)

    self.mcdSINGLE = tk.Radiobutton(self.frameModeControl)
    self.mcdSINGLE.place(relx=0.316, rely=0.323, relheight=0.161, relwidth=0.484
        , bordermode='ignore')
    self.mcdSINGLE.configure(activebackground="#f9f9f9")
    self.mcdSINGLE.configure(anchor='nw')
    self.mcdSINGLE.configure(font="-family {DejaVu Sans} -size -12")
    self.mcdSINGLE.configure(justify='left')
    self.mcdSINGLE.configure(takefocus="0")
    self.mcdSINGLE.configure(text='''SINGLE''')
    self.mcdSINGLE.configure(value="3")
    self.mcdSINGLE.configure(variable=ProcessorDisplayPanel_support.modeControl)

    self.mcpcADR_HOLD = tk.Radiobutton(self.frameModeControl)
    self.mcpcADR_HOLD.place(relx=0.316, rely=0.516, relheight=0.161
        , relwidth=0.484, bordermode='ignore')
    self.mcpcADR_HOLD.configure(activebackground="#f9f9f9")
    self.mcpcADR_HOLD.configure(anchor='nw')
    self.mcpcADR_HOLD.configure(font="-family {DejaVu Sans} -size -12")
    self.mcpcADR_HOLD.configure(justify='left')
    self.mcpcADR_HOLD.configure(takefocus="0")
    self.mcpcADR_HOLD.configure(text='''ADR HOLD''')
    self.mcpcADR_HOLD.configure(value="2")
    self.mcpcADR_HOLD.configure(variable=ProcessorDisplayPanel_support.modeControl)

    self.mcpcSINGLE_STEP = tk.Radiobutton(self.frameModeControl)
    self.mcpcSINGLE_STEP.place(relx=0.316, rely=0.645, relheight=0.161
        , relwidth=0.589, bordermode='ignore')
    self.mcpcSINGLE_STEP.configure(activebackground="#f9f9f9")
    self.mcpcSINGLE_STEP.configure(anchor='nw')
    self.mcpcSINGLE_STEP.configure(font="-family {DejaVu Sans} -size -12")
    self.mcpcSINGLE_STEP.configure(justify='left')
    self.mcpcSINGLE_STEP.configure(takefocus="0")
    self.mcpcSINGLE_STEP.configure(text='''SINGLE STEP''')
    self.mcpcSINGLE_STEP.configure(value="1")
    self.mcpcSINGLE_STEP.configure(variable=ProcessorDisplayPanel_support.modeControl)

    self.mcpcREPEAT = tk.Radiobutton(self.frameModeControl)
    self.mcpcREPEAT.place(relx=0.316, rely=0.774, relheight=0.161, relwidth=0.484
        , bordermode='ignore')
    self.mcpcREPEAT.configure(activebackground="#f9f9f9")
    self.mcpcREPEAT.configure(anchor='nw')
    self.mcpcREPEAT.configure(font="-family {DejaVu Sans} -size -12")
    self.mcpcREPEAT.configure(justify='left')
    self.mcpcREPEAT.configure(takefocus="0")
    self.mcpcREPEAT.configure(text='''REPEAT''')
    self.mcpcREPEAT.configure(value="0")
    self.mcpcREPEAT.configure(variable=ProcessorDisplayPanel_support.modeControl)

    self.Label18_26 = tk.Label(self.frameModeControl)
    self.Label18_26.place(relx=0.053, rely=0.258, height=23, width=58
        , bordermode='ignore')
    self.Label18_26.configure(activebackground="#f9f9f9")
    self.Label18_26.configure(anchor='ne')
    self.Label18_26.configure(font="-family {DejaVu Sans} -size -12")
    self.Label18_26.configure(text='''DISPLAY''')

    self.Label18_27 = tk.Label(self.frameModeControl)
    self.Label18_27.place(relx=0.158, rely=0.581, height=23, width=38
        , bordermode='ignore')
    self.Label18_27.configure(activebackground="#f9f9f9")
    self.Label18_27.configure(anchor='ne')
    self.Label18_27.configure(font="-family {DejaVu Sans} -size -12")
    self.Label18_27.configure(text='''PROG''')

    self.Label18_28 = tk.Label(self.frameModeControl)
    self.Label18_28.place(relx=0.105, rely=0.71, height=23, width=48
        , bordermode='ignore')
    self.Label18_28.configure(activebackground="#f9f9f9")
    self.Label18_28.configure(anchor='ne')
    self.Label18_28.configure(font="-family {DejaVu Sans} -size -12")
    self.Label18_28.configure(text='''CYCLE''')

    self.acDATA = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p7)
    self.acDATA.place(relx=0.423, rely=0.611, relheight=0.117, relwidth=0.069
        , bordermode='ignore')
    self.acDATA.configure(background="black")
    self.acDATA.configure(borderwidth="2")
    self.acDATA.configure(relief="ridge")
    self.acDATA.configure(selectbackground="#c4c4c4")
    self.acDATA.configure(takefocus="0")

    self.acINS = tk.Canvas(self.paneMemoryLoadAndDataDisplayPanel_p7)
    self.acINS.place(relx=0.423, rely=0.722, relheight=0.117, relwidth=0.069
        , bordermode='ignore')
    self.acINS.configure(background="black")
    self.acINS.configure(borderwidth="2")
    self.acINS.configure(relief="ridge")
    self.acINS.configure(selectbackground="#c4c4c4")
    self.acINS.configure(takefocus="0")

    self.Label12 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p7)
    self.Label12.place(relx=0.389, rely=0.5, height=23, width=62
        , bordermode='ignore')
    self.Label12.configure(activebackground="#f9f9f9")
    self.Label12.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12.configure(text='''COMPARE''')

    self.Label12_3 = tk.Label(self.paneMemoryLoadAndDataDisplayPanel_p7)
    self.Label12_3.place(relx=0.389, rely=0.389, height=23, width=62
        , bordermode='ignore')
    self.Label12_3.configure(activebackground="#f9f9f9")
    self.Label12_3.configure(font="-family {DejaVu Sans} -size -12")
    self.Label12_3.configure(text='''ADDRESS''')

    self.paneCEPanel = ttk.Panedwindow(top, orient="vertical")
    self.paneCEPanel.place(relx=0.0, rely=0.0, relheight=1.0, relwidth=0.328)
    self.paneCEPanel.configure(takefocus="0")
    self.paneCEPanel_p1 = ttk.Labelframe(height=240, text='{}')
    self.paneCEPanel.add(self.paneCEPanel_p1, weight=0)
    self.paneCEPanel_p2 = ttk.Labelframe(height=194.70000000000005
        , text='ACCUMULATOR')
    self.paneCEPanel.add(self.paneCEPanel_p2, weight=3)
    self.paneCEPanel_p3 = ttk.Labelframe(height=136.20000000000005
        , text='MEMORY BUFFER REGISTER')
    self.paneCEPanel.add(self.paneCEPanel_p3, weight=2)
    self.paneCEPanel_p4 = ttk.Labelframe(height=95.4, text='PROCESSOR TIMING')
    self.paneCEPanel.add(self.paneCEPanel_p4, weight=4)
    self.paneCEPanel_p5 = ttk.Labelframe(text='TAPE READER')
    self.paneCEPanel.add(self.paneCEPanel_p5, weight=2)
    self.__funcid5 = self.paneCEPanel.bind('<Map>', self.__adjust_sash5)

    self.Label11 = tk.Label(self.paneCEPanel_p1)
    self.Label11.place(relx=0.0, rely=0.143, height=25, width=437
        , bordermode='ignore')
    self.Label11.configure(activebackground="#f9f9f9")
    self.Label11.configure(font="-family {DejaVu Sans} -size 12")
    self.Label11.configure(text='''C. E. PANEL''')

  def __adjust_sash0(self, event):
    paned = event.widget
    pos = [35, 276, 396, 618, ]
    i = 0
    for sash in pos:
      paned.sashpos(i, sash)
      i += 1
    paned.unbind('<map>', self.__funcid0)
    del self.__funcid0

  def __adjust_sash1(self, event):
    paned = event.widget
    pos = [60, 123, ]
    i = 0
    for sash in pos:
      paned.sashpos(i, sash)
      i += 1
    paned.unbind('<map>', self.__funcid1)
    del self.__funcid1

  def __adjust_sash2(self, event):
    paned = event.widget
    pos = [35, 175, 313, 472, 544, ]
    i = 0
    for sash in pos:
      paned.sashpos(i, sash)
      i += 1
    paned.unbind('<map>', self.__funcid2)
    del self.__funcid2

  def __adjust_sash3(self, event):
    paned = event.widget
    pos = [231, ]
    i = 0
    for sash in pos:
      paned.sashpos(i, sash)
      i += 1
    paned.unbind('<map>', self.__funcid3)
    del self.__funcid3

  def __adjust_sash4(self, event):
    paned = event.widget
    pos = []
    i = 0
    for sash in pos:
      paned.sashpos(i, sash)
      i += 1
    paned.unbind('<map>', self.__funcid4)
    del self.__funcid4

  def __adjust_sash5(self, event):
    paned = event.widget
    pos = [35, 185, 321, 614, ]
    i = 0
    for sash in pos:
      paned.sashpos(i, sash)
      i += 1
    paned.unbind('<map>', self.__funcid5)
    del self.__funcid5

if __name__ == '__main__':
  vp_start_gui()





