#! /usr/bin/env python
#  -*- coding: utf-8 -*-
#
# GUI module generated by PAGE version 5.2
#  in conjunction with Tcl version 8.6
#    May 08, 2020 07:02:40 PM CDT  platform: Linux

import sys

try:
    import Tkinter as tk
except ImportError:
    import tkinter as tk

try:
    import ttk
    py3 = False
except ImportError:
    import tkinter.ttk as ttk
    py3 = True

import ProcessorDisplayPanel_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = tk.Tk()
    ProcessorDisplayPanel_support.set_Tk_var()
    top = topProcessorDisplayPanel (root)
    ProcessorDisplayPanel_support.init(root, top)
    root.mainloop()

w = None
def create_topProcessorDisplayPanel(rt, *args, **kwargs):
    '''Starting point when module is imported by another module.
       Correct form of call: 'create_topProcessorDisplayPanel(root, *args, **kwargs)' .'''
    global w, w_win, root
    #rt = root
    root = rt
    w = tk.Toplevel (root)
    ProcessorDisplayPanel_support.set_Tk_var()
    top = topProcessorDisplayPanel (w)
    ProcessorDisplayPanel_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_topProcessorDisplayPanel():
    global w
    w.destroy()
    w = None

class topProcessorDisplayPanel:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#ececec' # Closest X11 color: 'gray92'
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.',background=_bgcolor)
        self.style.configure('.',foreground=_fgcolor)
        self.style.configure('.',font="TkDefaultFont")
        self.style.map('.',background=
            [('selected', _compcolor), ('active',_ana2color)])

        top.geometry("420x781+4427+12")
        top.minsize(1, 1)
        top.maxsize(5105, 1170)
        top.resizable(1, 1)
        top.title("New Toplevel")
        top.configure(highlightcolor="black")

        self.paneProcessorDisplay = ttk.Panedwindow(top, orient="vertical")
        self.paneProcessorDisplay.place(relx=0.0, rely=0.0, relheight=1.0
                , relwidth=1.0)
        self.paneProcessorDisplay_p1 = ttk.Labelframe(height=100.0, text='DATA')
        self.paneProcessorDisplay.add(self.paneProcessorDisplay_p1, weight=1)
        self.paneProcessorDisplay_p2 = ttk.Labelframe(height=100.0
                , text='INTERRUPTS')
        self.paneProcessorDisplay.add(self.paneProcessorDisplay_p2, weight=4)
        self.paneProcessorDisplay_p3 = ttk.Labelframe(height=190.8
                , text='PROGRAM CONTROL')
        self.paneProcessorDisplay.add(self.paneProcessorDisplay_p3, weight=3)
        self.paneProcessorDisplay_p4 = ttk.Labelframe(text='POWER CONTROL')
        self.paneProcessorDisplay.add(self.paneProcessorDisplay_p4, weight=2)
        self.__funcid0 = self.paneProcessorDisplay.bind('<Map>', self.__adjust_sash0)

        self.TPanedwindow1 = ttk.Panedwindow(self.paneProcessorDisplay_p3
                , orient="vertical")
        self.TPanedwindow1.place(relx=0.0, rely=0.088, relheight=0.912
                , relwidth=1.0, bordermode='ignore')
        self.TPanedwindow1_p1 = ttk.Labelframe(height=128.0, text='')
        self.TPanedwindow1.add(self.TPanedwindow1_p1, weight=0)
        self.paneProgRegA = ttk.Labelframe(height=37.5, text='PROG REG A')
        self.TPanedwindow1.add(self.paneProgRegA, weight=0)
        self.paneProgRegB = ttk.Labelframe(text='PROG REG B')
        self.TPanedwindow1.add(self.paneProgRegB, weight=0)
        self.__funcid1 = self.TPanedwindow1.bind('<Map>', self.__adjust_sash1)

        self.PRA1 = tk.Checkbutton(self.paneProgRegA)
        self.PRA1.place(relx=0.095, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA1.configure(activebackground="#f9f9f9")
        self.PRA1.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA1.configure(justify='left')
        self.PRA1.configure(variable=ProcessorDisplayPanel_support.bPRA1)

        self.PRA2 = tk.Checkbutton(self.paneProgRegA)
        self.PRA2.place(relx=0.167, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA2.configure(activebackground="#f9f9f9")
        self.PRA2.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA2.configure(justify='left')
        self.PRA2.configure(variable=ProcessorDisplayPanel_support.bPRA2)

        self.PRA3 = tk.Checkbutton(self.paneProgRegA)
        self.PRA3.place(relx=0.238, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA3.configure(activebackground="#f9f9f9")
        self.PRA3.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA3.configure(justify='left')
        self.PRA3.configure(variable=ProcessorDisplayPanel_support.bPRA3)

        self.PRA12 = tk.Checkbutton(self.paneProgRegA)
        self.PRA12.place(relx=0.881, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA12.configure(activebackground="#f9f9f9")
        self.PRA12.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA12.configure(justify='left')
        self.PRA12.configure(variable=ProcessorDisplayPanel_support.bPRA12)

        self.PRA4 = tk.Checkbutton(self.paneProgRegA)
        self.PRA4.place(relx=0.31, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA4.configure(activebackground="#f9f9f9")
        self.PRA4.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA4.configure(justify='left')
        self.PRA4.configure(variable=ProcessorDisplayPanel_support.bPRA4)

        self.PRA5 = tk.Checkbutton(self.paneProgRegA)
        self.PRA5.place(relx=0.381, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA5.configure(activebackground="#f9f9f9")
        self.PRA5.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA5.configure(justify='left')
        self.PRA5.configure(variable=ProcessorDisplayPanel_support.bPRA5)

        self.PRA6 = tk.Checkbutton(self.paneProgRegA)
        self.PRA6.place(relx=0.452, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA6.configure(activebackground="#f9f9f9")
        self.PRA6.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA6.configure(justify='left')
        self.PRA6.configure(variable=ProcessorDisplayPanel_support.bPRA6)

        self.PRA11 = tk.Checkbutton(self.paneProgRegA)
        self.PRA11.place(relx=0.81, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA11.configure(activebackground="#f9f9f9")
        self.PRA11.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA11.configure(justify='left')
        self.PRA11.configure(variable=ProcessorDisplayPanel_support.bPRA11)

        self.PRA7 = tk.Checkbutton(self.paneProgRegA)
        self.PRA7.place(relx=0.524, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA7.configure(activebackground="#f9f9f9")
        self.PRA7.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA7.configure(justify='left')
        self.PRA7.configure(variable=ProcessorDisplayPanel_support.bPRA7)

        self.PRA8 = tk.Checkbutton(self.paneProgRegA)
        self.PRA8.place(relx=0.595, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA8.configure(activebackground="#f9f9f9")
        self.PRA8.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA8.configure(justify='left')
        self.PRA8.configure(variable=ProcessorDisplayPanel_support.bPRA8)

        self.PRA9 = tk.Checkbutton(self.paneProgRegA)
        self.PRA9.place(relx=0.667, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA9.configure(activebackground="#f9f9f9")
        self.PRA9.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA9.configure(justify='left')
        self.PRA9.configure(variable=ProcessorDisplayPanel_support.bPRA9)

        self.PRA10 = tk.Checkbutton(self.paneProgRegA)
        self.PRA10.place(relx=0.738, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA10.configure(activebackground="#f9f9f9")
        self.PRA10.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA10.configure(justify='left')
        self.PRA10.configure(variable=ProcessorDisplayPanel_support.bPRA10)

        self.PRA14 = tk.Checkbutton(self.paneProgRegA)
        self.PRA14.place(relx=0.095, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA14.configure(activebackground="#f9f9f9")
        self.PRA14.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA14.configure(justify='left')
        self.PRA14.configure(variable=ProcessorDisplayPanel_support.bPRA14)

        self.PRA15 = tk.Checkbutton(self.paneProgRegA)
        self.PRA15.place(relx=0.167, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA15.configure(activebackground="#f9f9f9")
        self.PRA15.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA15.configure(justify='left')
        self.PRA15.configure(variable=ProcessorDisplayPanel_support.bPRA15)

        self.PRA16 = tk.Checkbutton(self.paneProgRegA)
        self.PRA16.place(relx=0.238, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA16.configure(activebackground="#f9f9f9")
        self.PRA16.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA16.configure(justify='left')
        self.PRA16.configure(variable=ProcessorDisplayPanel_support.bPRA16)

        self.PRA17 = tk.Checkbutton(self.paneProgRegA)
        self.PRA17.place(relx=0.31, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA17.configure(activebackground="#f9f9f9")
        self.PRA17.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA17.configure(justify='left')
        self.PRA17.configure(variable=ProcessorDisplayPanel_support.bPRA17)

        self.PRA18 = tk.Checkbutton(self.paneProgRegA)
        self.PRA18.place(relx=0.381, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA18.configure(activebackground="#f9f9f9")
        self.PRA18.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA18.configure(justify='left')
        self.PRA18.configure(variable=ProcessorDisplayPanel_support.bPRA18)

        self.PRA19 = tk.Checkbutton(self.paneProgRegA)
        self.PRA19.place(relx=0.452, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA19.configure(activebackground="#f9f9f9")
        self.PRA19.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA19.configure(justify='left')
        self.PRA19.configure(variable=ProcessorDisplayPanel_support.bPRA19)

        self.PRA20 = tk.Checkbutton(self.paneProgRegA)
        self.PRA20.place(relx=0.524, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA20.configure(activebackground="#f9f9f9")
        self.PRA20.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA20.configure(justify='left')
        self.PRA20.configure(variable=ProcessorDisplayPanel_support.bPRA20)

        self.PRA21 = tk.Checkbutton(self.paneProgRegA)
        self.PRA21.place(relx=0.595, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA21.configure(activebackground="#f9f9f9")
        self.PRA21.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA21.configure(justify='left')
        self.PRA21.configure(variable=ProcessorDisplayPanel_support.bPRA21)

        self.PRA22 = tk.Checkbutton(self.paneProgRegA)
        self.PRA22.place(relx=0.667, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA22.configure(activebackground="#f9f9f9")
        self.PRA22.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA22.configure(justify='left')
        self.PRA22.configure(variable=ProcessorDisplayPanel_support.bPRA22)

        self.PRA23 = tk.Checkbutton(self.paneProgRegA)
        self.PRA23.place(relx=0.738, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA23.configure(activebackground="#f9f9f9")
        self.PRA23.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA23.configure(justify='left')
        self.PRA23.configure(variable=ProcessorDisplayPanel_support.bPRA23)

        self.PRA24 = tk.Checkbutton(self.paneProgRegA)
        self.PRA24.place(relx=0.81, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA24.configure(activebackground="#f9f9f9")
        self.PRA24.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA24.configure(justify='left')
        self.PRA24.configure(variable=ProcessorDisplayPanel_support.bPRA24)

        self.PRA25 = tk.Checkbutton(self.paneProgRegA)
        self.PRA25.place(relx=0.881, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA25.configure(activebackground="#f9f9f9")
        self.PRA25.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA25.configure(justify='left')
        self.PRA25.configure(variable=ProcessorDisplayPanel_support.bPRA25)

        self.PRAS = tk.Checkbutton(self.paneProgRegA)
        self.PRAS.place(relx=0.024, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRAS.configure(activebackground="#f9f9f9")
        self.PRAS.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRAS.configure(justify='left')
        self.PRAS.configure(variable=ProcessorDisplayPanel_support.bPRAS)

        self.PRA13 = tk.Checkbutton(self.paneProgRegA)
        self.PRA13.place(relx=0.024, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRA13.configure(activebackground="#f9f9f9")
        self.PRA13.configure(command=ProcessorDisplayPanel_support.cPRA)
        self.PRA13.configure(justify='left')
        self.PRA13.configure(variable=ProcessorDisplayPanel_support.bPRA13)

        self.Label1 = tk.Label(self.paneProgRegA)
        self.Label1.place(relx=0.021, rely=0.25, height=19, width=12
                , bordermode='ignore')
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(font="-family {DejaVu Sans} -size 7")
        self.Label1.configure(text='''S''')

        self.Label2 = tk.Label(self.paneProgRegA)
        self.Label2.place(relx=0.94, rely=0.25, height=19, width=20
                , bordermode='ignore')
        self.Label2.configure(activebackground="#f9f9f9")
        self.Label2.configure(font="-family {DejaVu Sans} -size 6")
        self.Label2.configure(text='''12''')

        self.Label3 = tk.Label(self.paneProgRegA)
        self.Label3.place(relx=0.94, rely=0.691, height=19, width=20
                , bordermode='ignore')
        self.Label3.configure(activebackground="#f9f9f9")
        self.Label3.configure(font="-family {DejaVu Sans} -size 6")
        self.Label3.configure(text='''25''')

        self.Label4 = tk.Label(self.paneProgRegA)
        self.Label4.place(relx=0.007, rely=0.691, height=19, width=20
                , bordermode='ignore')
        self.Label4.configure(activebackground="#f9f9f9")
        self.Label4.configure(font="-family {DejaVu Sans} -size 6")
        self.Label4.configure(text='''13''')

        self.PRBS = tk.Checkbutton(self.paneProgRegB)
        self.PRBS.place(relx=0.024, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRBS.configure(activebackground="#f9f9f9")
        self.PRBS.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRBS.configure(justify='left')
        self.PRBS.configure(variable=ProcessorDisplayPanel_support.bPRBS)

        self.PRB13 = tk.Checkbutton(self.paneProgRegB)
        self.PRB13.place(relx=0.024, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB13.configure(activebackground="#f9f9f9")
        self.PRB13.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB13.configure(justify='left')
        self.PRB13.configure(variable=ProcessorDisplayPanel_support.bPRB13)

        self.PRB1 = tk.Checkbutton(self.paneProgRegB)
        self.PRB1.place(relx=0.095, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB1.configure(activebackground="#f9f9f9")
        self.PRB1.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB1.configure(justify='left')
        self.PRB1.configure(variable=ProcessorDisplayPanel_support.bPRB1)

        self.PRB2 = tk.Checkbutton(self.paneProgRegB)
        self.PRB2.place(relx=0.167, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB2.configure(activebackground="#f9f9f9")
        self.PRB2.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB2.configure(justify='left')
        self.PRB2.configure(variable=ProcessorDisplayPanel_support.bPRB2)

        self.PRB3 = tk.Checkbutton(self.paneProgRegB)
        self.PRB3.place(relx=0.238, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB3.configure(activebackground="#f9f9f9")
        self.PRB3.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB3.configure(justify='left')
        self.PRB3.configure(variable=ProcessorDisplayPanel_support.bPRB3)

        self.PRB4 = tk.Checkbutton(self.paneProgRegB)
        self.PRB4.place(relx=0.31, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB4.configure(activebackground="#f9f9f9")
        self.PRB4.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB4.configure(justify='left')
        self.PRB4.configure(variable=ProcessorDisplayPanel_support.bPRB4)

        self.PRB5 = tk.Checkbutton(self.paneProgRegB)
        self.PRB5.place(relx=0.381, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB5.configure(activebackground="#f9f9f9")
        self.PRB5.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB5.configure(justify='left')
        self.PRB5.configure(variable=ProcessorDisplayPanel_support.bPRB5)

        self.PRB6 = tk.Checkbutton(self.paneProgRegB)
        self.PRB6.place(relx=0.452, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB6.configure(activebackground="#f9f9f9")
        self.PRB6.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB6.configure(justify='left')
        self.PRB6.configure(variable=ProcessorDisplayPanel_support.bPRB6)

        self.PRB7 = tk.Checkbutton(self.paneProgRegB)
        self.PRB7.place(relx=0.524, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB7.configure(activebackground="#f9f9f9")
        self.PRB7.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB7.configure(justify='left')
        self.PRB7.configure(variable=ProcessorDisplayPanel_support.bPRB7)

        self.PRB8 = tk.Checkbutton(self.paneProgRegB)
        self.PRB8.place(relx=0.595, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB8.configure(activebackground="#f9f9f9")
        self.PRB8.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB8.configure(justify='left')
        self.PRB8.configure(variable=ProcessorDisplayPanel_support.bPRB8)

        self.PRB9 = tk.Checkbutton(self.paneProgRegB)
        self.PRB9.place(relx=0.667, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB9.configure(activebackground="#f9f9f9")
        self.PRB9.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB9.configure(justify='left')
        self.PRB9.configure(variable=ProcessorDisplayPanel_support.bPRB9)

        self.PRB10 = tk.Checkbutton(self.paneProgRegB)
        self.PRB10.place(relx=0.738, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB10.configure(activebackground="#f9f9f9")
        self.PRB10.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB10.configure(justify='left')
        self.PRB10.configure(variable=ProcessorDisplayPanel_support.bPRB10)

        self.PRB11 = tk.Checkbutton(self.paneProgRegB)
        self.PRB11.place(relx=0.81, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB11.configure(activebackground="#f9f9f9")
        self.PRB11.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB11.configure(justify='left')
        self.PRB11.configure(variable=ProcessorDisplayPanel_support.bPRB11)

        self.PRB12 = tk.Checkbutton(self.paneProgRegB)
        self.PRB12.place(relx=0.881, rely=0.294, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB12.configure(activebackground="#f9f9f9")
        self.PRB12.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB12.configure(justify='left')
        self.PRB12.configure(variable=ProcessorDisplayPanel_support.bPRB12)

        self.PRB14 = tk.Checkbutton(self.paneProgRegB)
        self.PRB14.place(relx=0.095, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB14.configure(activebackground="#f9f9f9")
        self.PRB14.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB14.configure(justify='left')
        self.PRB14.configure(variable=ProcessorDisplayPanel_support.bPRB14)

        self.PRB15 = tk.Checkbutton(self.paneProgRegB)
        self.PRB15.place(relx=0.167, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB15.configure(activebackground="#f9f9f9")
        self.PRB15.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB15.configure(justify='left')
        self.PRB15.configure(variable=ProcessorDisplayPanel_support.bPRB15)

        self.PRB16 = tk.Checkbutton(self.paneProgRegB)
        self.PRB16.place(relx=0.238, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB16.configure(activebackground="#f9f9f9")
        self.PRB16.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB16.configure(justify='left')
        self.PRB16.configure(variable=ProcessorDisplayPanel_support.bPRB16)

        self.PRB17 = tk.Checkbutton(self.paneProgRegB)
        self.PRB17.place(relx=0.31, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB17.configure(activebackground="#f9f9f9")
        self.PRB17.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB17.configure(justify='left')
        self.PRB17.configure(variable=ProcessorDisplayPanel_support.bPRB17)

        self.PRB18 = tk.Checkbutton(self.paneProgRegB)
        self.PRB18.place(relx=0.381, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB18.configure(activebackground="#f9f9f9")
        self.PRB18.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB18.configure(justify='left')
        self.PRB18.configure(variable=ProcessorDisplayPanel_support.bPRB18)

        self.PRB19 = tk.Checkbutton(self.paneProgRegB)
        self.PRB19.place(relx=0.452, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB19.configure(activebackground="#f9f9f9")
        self.PRB19.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB19.configure(justify='left')
        self.PRB19.configure(variable=ProcessorDisplayPanel_support.bPRB19)

        self.PRB20 = tk.Checkbutton(self.paneProgRegB)
        self.PRB20.place(relx=0.524, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB20.configure(activebackground="#f9f9f9")
        self.PRB20.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB20.configure(justify='left')
        self.PRB20.configure(variable=ProcessorDisplayPanel_support.bPRB20)

        self.PRB21 = tk.Checkbutton(self.paneProgRegB)
        self.PRB21.place(relx=0.595, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB21.configure(activebackground="#f9f9f9")
        self.PRB21.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB21.configure(justify='left')
        self.PRB21.configure(variable=ProcessorDisplayPanel_support.bPRB21)

        self.PRB22 = tk.Checkbutton(self.paneProgRegB)
        self.PRB22.place(relx=0.667, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB22.configure(activebackground="#f9f9f9")
        self.PRB22.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB22.configure(justify='left')
        self.PRB22.configure(variable=ProcessorDisplayPanel_support.bPRB22)

        self.PRB23 = tk.Checkbutton(self.paneProgRegB)
        self.PRB23.place(relx=0.738, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB23.configure(activebackground="#f9f9f9")
        self.PRB23.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB23.configure(justify='left')
        self.PRB23.configure(variable=ProcessorDisplayPanel_support.bPRB23)

        self.PRB24 = tk.Checkbutton(self.paneProgRegB)
        self.PRB24.place(relx=0.81, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB24.configure(activebackground="#f9f9f9")
        self.PRB24.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB24.configure(justify='left')
        self.PRB24.configure(variable=ProcessorDisplayPanel_support.bPRB24)

        self.PRB25 = tk.Checkbutton(self.paneProgRegB)
        self.PRB25.place(relx=0.881, rely=0.588, relheight=0.309, relwidth=0.086
                , bordermode='ignore')
        self.PRB25.configure(activebackground="#f9f9f9")
        self.PRB25.configure(command=ProcessorDisplayPanel_support.cPRB)
        self.PRB25.configure(justify='left')
        self.PRB25.configure(variable=ProcessorDisplayPanel_support.bPRB25)

        self.Label5 = tk.Label(self.paneProgRegB)
        self.Label5.place(relx=0.024, rely=0.221, height=19, width=12
                , bordermode='ignore')
        self.Label5.configure(activebackground="#f9f9f9")
        self.Label5.configure(font="-family {DejaVu Sans} -size 6")
        self.Label5.configure(text='''S''')

        self.Label6 = tk.Label(self.paneProgRegB)
        self.Label6.place(relx=0.94, rely=0.25, height=19, width=20
                , bordermode='ignore')
        self.Label6.configure(activebackground="#f9f9f9")
        self.Label6.configure(font="-family {DejaVu Sans} -size 6")
        self.Label6.configure(text='''12''')

        self.Label7 = tk.Label(self.paneProgRegB)
        self.Label7.place(relx=0.007, rely=0.691, height=19, width=20
                , bordermode='ignore')
        self.Label7.configure(activebackground="#f9f9f9")
        self.Label7.configure(font="-family {DejaVu Sans} -size 6")
        self.Label7.configure(text='''13''')

        self.Label8 = tk.Label(self.paneProgRegB)
        self.Label8.place(relx=0.94, rely=0.691, height=19, width=20
                , bordermode='ignore')
        self.Label8.configure(activebackground="#f9f9f9")
        self.Label8.configure(font="-family {DejaVu Sans} -size 6")
        self.Label8.configure(text='''25''')

        self.menubar = tk.Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)

    def __adjust_sash0(self, event):
        paned = event.widget
        pos = [288, 427, 658, ]
        i = 0
        for sash in pos:
            paned.sashpos(i, sash)
            i += 1
        paned.unbind('<map>', self.__funcid0)
        del self.__funcid0

    def __adjust_sash1(self, event):
        paned = event.widget
        pos = [60, 133, ]
        i = 0
        for sash in pos:
            paned.sashpos(i, sash)
            i += 1
        paned.unbind('<map>', self.__funcid1)
        del self.__funcid1

if __name__ == '__main__':
    vp_start_gui()





